import PerfectScrollbar from 'perfect-scrollbar';
import { NgZone, ElementRef, OnInit, DoCheck, OnChanges, OnDestroy, EventEmitter, SimpleChanges, KeyValueDiffers } from '@angular/core';
import { Geometry, Position } from './perfect-scrollbar.interfaces';
import { PerfectScrollbarConfigInterface } from './perfect-scrollbar.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class PerfectScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges {
    private zone;
    private differs;
    elementRef: ElementRef;
    private platformId;
    private defaults;
    private instance;
    private ro;
    private timeout;
    private animation;
    private configDiff;
    private readonly ngDestroy;
    disabled: boolean;
    config?: PerfectScrollbarConfigInterface;
    psScrollY: EventEmitter<any>;
    psScrollX: EventEmitter<any>;
    psScrollUp: EventEmitter<any>;
    psScrollDown: EventEmitter<any>;
    psScrollLeft: EventEmitter<any>;
    psScrollRight: EventEmitter<any>;
    psYReachEnd: EventEmitter<any>;
    psYReachStart: EventEmitter<any>;
    psXReachEnd: EventEmitter<any>;
    psXReachStart: EventEmitter<any>;
    constructor(zone: NgZone, differs: KeyValueDiffers, elementRef: ElementRef, platformId: Object, defaults: PerfectScrollbarConfigInterface);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ps(): PerfectScrollbar | null;
    update(): void;
    geometry(prefix?: string): Geometry;
    position(absolute?: boolean): Position;
    scrollable(direction?: string): boolean;
    scrollTo(x: number, y?: number, speed?: number): void;
    scrollToX(x: number, speed?: number): void;
    scrollToY(y: number, speed?: number): void;
    scrollToTop(offset?: number, speed?: number): void;
    scrollToLeft(offset?: number, speed?: number): void;
    scrollToRight(offset?: number, speed?: number): void;
    scrollToBottom(offset?: number, speed?: number): void;
    scrollToElement(qs: string, offset?: number, speed?: number): void;
    private animateScrolling;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PerfectScrollbarDirective, [null, null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PerfectScrollbarDirective, "[perfectScrollbar]", ["ngxPerfectScrollbar"], { "disabled": "disabled"; "config": "perfectScrollbar"; }, { "psScrollY": "psScrollY"; "psScrollX": "psScrollX"; "psScrollUp": "psScrollUp"; "psScrollDown": "psScrollDown"; "psScrollLeft": "psScrollLeft"; "psScrollRight": "psScrollRight"; "psYReachEnd": "psYReachEnd"; "psYReachStart": "psYReachStart"; "psXReachEnd": "psXReachEnd"; "psXReachStart": "psXReachStart"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZmVjdC1zY3JvbGxiYXIuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInBlcmZlY3Qtc2Nyb2xsYmFyLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQZXJmZWN0U2Nyb2xsYmFyIGZyb20gJ3BlcmZlY3Qtc2Nyb2xsYmFyJztcbmltcG9ydCB7IE5nWm9uZSwgRWxlbWVudFJlZiwgT25Jbml0LCBEb0NoZWNrLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBTaW1wbGVDaGFuZ2VzLCBLZXlWYWx1ZURpZmZlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdlb21ldHJ5LCBQb3NpdGlvbiB9IGZyb20gJy4vcGVyZmVjdC1zY3JvbGxiYXIuaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBQZXJmZWN0U2Nyb2xsYmFyQ29uZmlnSW50ZXJmYWNlIH0gZnJvbSAnLi9wZXJmZWN0LXNjcm9sbGJhci5pbnRlcmZhY2VzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBlcmZlY3RTY3JvbGxiYXJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgRG9DaGVjaywgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSBkaWZmZXJzO1xuICAgIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIHByaXZhdGUgZGVmYXVsdHM7XG4gICAgcHJpdmF0ZSBpbnN0YW5jZTtcbiAgICBwcml2YXRlIHJvO1xuICAgIHByaXZhdGUgdGltZW91dDtcbiAgICBwcml2YXRlIGFuaW1hdGlvbjtcbiAgICBwcml2YXRlIGNvbmZpZ0RpZmY7XG4gICAgcHJpdmF0ZSByZWFkb25seSBuZ0Rlc3Ryb3k7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgY29uZmlnPzogUGVyZmVjdFNjcm9sbGJhckNvbmZpZ0ludGVyZmFjZTtcbiAgICBwc1Njcm9sbFk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHBzU2Nyb2xsWDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHNTY3JvbGxVcDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHNTY3JvbGxEb3duOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwc1Njcm9sbExlZnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHBzU2Nyb2xsUmlnaHQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHBzWVJlYWNoRW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwc1lSZWFjaFN0YXJ0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwc1hSZWFjaEVuZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHNYUmVhY2hTdGFydDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29uc3RydWN0b3Ioem9uZTogTmdab25lLCBkaWZmZXJzOiBLZXlWYWx1ZURpZmZlcnMsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHBsYXRmb3JtSWQ6IE9iamVjdCwgZGVmYXVsdHM6IFBlcmZlY3RTY3JvbGxiYXJDb25maWdJbnRlcmZhY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBwcygpOiBQZXJmZWN0U2Nyb2xsYmFyIHwgbnVsbDtcbiAgICB1cGRhdGUoKTogdm9pZDtcbiAgICBnZW9tZXRyeShwcmVmaXg/OiBzdHJpbmcpOiBHZW9tZXRyeTtcbiAgICBwb3NpdGlvbihhYnNvbHV0ZT86IGJvb2xlYW4pOiBQb3NpdGlvbjtcbiAgICBzY3JvbGxhYmxlKGRpcmVjdGlvbj86IHN0cmluZyk6IGJvb2xlYW47XG4gICAgc2Nyb2xsVG8oeDogbnVtYmVyLCB5PzogbnVtYmVyLCBzcGVlZD86IG51bWJlcik6IHZvaWQ7XG4gICAgc2Nyb2xsVG9YKHg6IG51bWJlciwgc3BlZWQ/OiBudW1iZXIpOiB2b2lkO1xuICAgIHNjcm9sbFRvWSh5OiBudW1iZXIsIHNwZWVkPzogbnVtYmVyKTogdm9pZDtcbiAgICBzY3JvbGxUb1RvcChvZmZzZXQ/OiBudW1iZXIsIHNwZWVkPzogbnVtYmVyKTogdm9pZDtcbiAgICBzY3JvbGxUb0xlZnQob2Zmc2V0PzogbnVtYmVyLCBzcGVlZD86IG51bWJlcik6IHZvaWQ7XG4gICAgc2Nyb2xsVG9SaWdodChvZmZzZXQ/OiBudW1iZXIsIHNwZWVkPzogbnVtYmVyKTogdm9pZDtcbiAgICBzY3JvbGxUb0JvdHRvbShvZmZzZXQ/OiBudW1iZXIsIHNwZWVkPzogbnVtYmVyKTogdm9pZDtcbiAgICBzY3JvbGxUb0VsZW1lbnQocXM6IHN0cmluZywgb2Zmc2V0PzogbnVtYmVyLCBzcGVlZD86IG51bWJlcik6IHZvaWQ7XG4gICAgcHJpdmF0ZSBhbmltYXRlU2Nyb2xsaW5nO1xufVxuIl19