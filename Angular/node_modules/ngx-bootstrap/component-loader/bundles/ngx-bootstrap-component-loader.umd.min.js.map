{"version":3,"sources":["ng://ngx-bootstrap/component-loader/bs-component-ref.class.ts","ng://ngx-bootstrap/component-loader/content-ref.class.ts","ng://ngx-bootstrap/component-loader/component-loader.class.ts","ng://ngx-bootstrap/component-loader/component-loader.factory.ts"],"names":["nodes","viewRef","componentRef","this","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","containerDefaultSelector","_listenOpts","_globalListener","Function","prototype","Object","defineProperty","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","provide","provider","push","show","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","initialState","injector","Injector","create","providers","parent","attachView","hostView","instance","assign","ElementRef","nativeElement","appendChild","location","document","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","_registerOutsideClick","hide","deletePositionElement","componentEl","parentNode","removeChild","destroy","remove","indexOf","_removeGlobalListener","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","_this","triggers","outsideClick","outsideEsc","target","registerHide","listenToTriggersV2","attachInline","vRef","template","_inlineViewRef","createEmbeddedView","target_1","setTimeout","registerOutsideClick","targets","registerEscClick","getInnerComponent","_zoneSubscription","subscribe","element","appendToBody","onStable","calcPosition","unsubscribe","ContentRef","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","createText","ComponentLoaderFactory","createLoader","Injectable","ComponentFactoryResolver","NgZone","PositioningService","ApplicationRef"],"mappings":"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","sourcesContent":["import { TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class BsComponentRef<T> {\n  templateRef: TemplateRef<T>;\n  viewContainer: ViewContainerRef;\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  /* tslint:disable-next-line: no-any */\n  nodes: any[];\n  viewRef?: ViewRef;\n  /* tslint:disable-next-line: no-any */\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    /* tslint:disable-next-line: no-any */\n    nodes: any[],\n    viewRef?: ViewRef,\n    /* tslint:disable-next-line: no-any */\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Renderer2,\n  StaticProvider,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { PositioningOptions, PositioningService } from 'ngx-bootstrap/positioning';\n\nimport {\n  listenToTriggersV2,\n  registerEscClick,\n  registerOutsideClick\n} from 'ngx-bootstrap/utils';\n\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\nimport { Subscription } from 'rxjs';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<void> = new EventEmitter();\n  /* tslint:disable-next-line: no-any*/\n  onShown: EventEmitter<any> = new EventEmitter();\n  /* tslint:disable-next-line: no-any*/\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<boolean> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: StaticProvider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: Subscription;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  /* tslint:disable-next-line: no-any*/\n  private container: string | ElementRef | any;\n\n  /**\n   * A selector used if container element was not found\n   */\n  private containerDefaultSelector = 'body';\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string | ElementRef): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    /* tslint:disable-next-line: no-unnecessary-type-assertion */\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: StaticProvider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    /* tslint:disable-next-line: no-any*/\n    content?: string | TemplateRef<any>;\n    /* tslint:disable-next-line: no-any*/\n    context?: any;\n    /* tslint:disable-next-line: no-any*/\n    initialState?: any;\n    /* tslint:disable-next-line: no-any*/\n    [key: string]: any;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n\n      const injector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (typeof this.container === 'string' && typeof document !== 'undefined') {\n        const selectedElement = document.querySelector(this.container) ||\n                                document.querySelector(this.containerDefaultSelector);\n\n        selectedElement.appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this._posService.deletePositionElement(this._componentRef.location);\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    /* tslint:disable-next-line: no-any*/\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n    if (this._listenOpts.outsideEsc) {\n      const target = this._componentRef.location.nativeElement;\n      this._globalListener = registerEscClick(this._renderer, {\n        targets: [target, this._elementRef.nativeElement],\n        outsideEsc: this._listenOpts.outsideEsc,\n        hide: () => this._listenOpts.hide()\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this.onShown.subscribe(() => {\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n\n      this._posService.calcPosition();\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    /* tslint:disable-next-line: no-any*/\n    content: string | TemplateRef<any> | any,\n    /* tslint:disable-next-line: no-any*/\n    context?: any,\n    /* tslint:disable-next-line: no-any*/\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n\n      const modalContentInjector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n@Injectable()\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\n}\n"]}