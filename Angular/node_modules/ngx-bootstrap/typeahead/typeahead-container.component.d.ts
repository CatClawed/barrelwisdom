import { ChangeDetectorRef, ElementRef, OnDestroy, Renderer2, TemplateRef, EventEmitter } from '@angular/core';
import { PositioningService } from 'ngx-bootstrap/positioning';
import { Subscription } from 'rxjs';
import { TypeaheadMatch } from './typeahead-match.class';
import { TypeaheadDirective } from './typeahead.directive';
import { TypeaheadOptionItemContext, TypeaheadOptionListContext, TypeaheadTemplateMethods } from './models';
import * as ɵngcc0 from '@angular/core';
export declare class TypeaheadContainerComponent implements OnDestroy {
    private positionService;
    private renderer;
    element: ElementRef;
    private changeDetectorRef;
    activeChangeEvent: EventEmitter<any>;
    parent: TypeaheadDirective;
    query: string[] | string;
    isFocused: boolean;
    top: string;
    left: string;
    display: string;
    placement: string;
    dropup: boolean;
    guiHeight: string;
    needScrollbar: boolean;
    animationState: string;
    positionServiceSubscription: Subscription;
    height: number;
    popupId: string;
    readonly isBs4: boolean;
    readonly typeaheadTemplateMethods: TypeaheadTemplateMethods;
    protected _active: TypeaheadMatch;
    protected _matches: TypeaheadMatch[];
    private ulElement;
    private liElements;
    constructor(positionService: PositioningService, renderer: Renderer2, element: ElementRef, changeDetectorRef: ChangeDetectorRef);
    active: TypeaheadMatch;
    matches: TypeaheadMatch[];
    readonly isTopPosition: boolean;
    readonly optionsListTemplate: TemplateRef<TypeaheadOptionListContext>;
    readonly isAnimated: boolean;
    readonly adaptivePosition: boolean;
    readonly typeaheadScrollable: boolean;
    readonly typeaheadOptionsInScrollableView: number;
    readonly typeaheadIsFirstItemActive: boolean;
    readonly itemTemplate: TemplateRef<TypeaheadOptionItemContext>;
    selectActiveMatch(isActiveItemChanged?: boolean): void;
    activeChanged(): void;
    prevActiveMatch(): void;
    nextActiveMatch(): void;
    selectActive(value: TypeaheadMatch): void;
    highlight(match: TypeaheadMatch, query: string[] | string): string;
    focusLost(): void;
    isActive(value: TypeaheadMatch): boolean;
    selectMatch(value: TypeaheadMatch, e?: Event): boolean;
    setScrollableMode(): void;
    scrollPrevious(index: number): void;
    scrollNext(index: number): void;
    ngOnDestroy(): void;
    private isScrolledIntoView;
    private scrollToBottom;
    private scrollToTop;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TypeaheadContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TypeaheadContainerComponent, "typeahead-container", never, {}, { "activeChangeEvent": "activeChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZWFoZWFkLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidHlwZWFoZWFkLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgT25EZXN0cm95LCBSZW5kZXJlcjIsIFRlbXBsYXRlUmVmLCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvc2l0aW9uaW5nU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9zaXRpb25pbmcnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBUeXBlYWhlYWRNYXRjaCB9IGZyb20gJy4vdHlwZWFoZWFkLW1hdGNoLmNsYXNzJztcbmltcG9ydCB7IFR5cGVhaGVhZERpcmVjdGl2ZSB9IGZyb20gJy4vdHlwZWFoZWFkLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUeXBlYWhlYWRPcHRpb25JdGVtQ29udGV4dCwgVHlwZWFoZWFkT3B0aW9uTGlzdENvbnRleHQsIFR5cGVhaGVhZFRlbXBsYXRlTWV0aG9kcyB9IGZyb20gJy4vbW9kZWxzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFR5cGVhaGVhZENvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBwb3NpdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBlbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgYWN0aXZlQ2hhbmdlRXZlbnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHBhcmVudDogVHlwZWFoZWFkRGlyZWN0aXZlO1xuICAgIHF1ZXJ5OiBzdHJpbmdbXSB8IHN0cmluZztcbiAgICBpc0ZvY3VzZWQ6IGJvb2xlYW47XG4gICAgdG9wOiBzdHJpbmc7XG4gICAgbGVmdDogc3RyaW5nO1xuICAgIGRpc3BsYXk6IHN0cmluZztcbiAgICBwbGFjZW1lbnQ6IHN0cmluZztcbiAgICBkcm9wdXA6IGJvb2xlYW47XG4gICAgZ3VpSGVpZ2h0OiBzdHJpbmc7XG4gICAgbmVlZFNjcm9sbGJhcjogYm9vbGVhbjtcbiAgICBhbmltYXRpb25TdGF0ZTogc3RyaW5nO1xuICAgIHBvc2l0aW9uU2VydmljZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIGhlaWdodDogbnVtYmVyO1xuICAgIHBvcHVwSWQ6IHN0cmluZztcbiAgICByZWFkb25seSBpc0JzNDogYm9vbGVhbjtcbiAgICByZWFkb25seSB0eXBlYWhlYWRUZW1wbGF0ZU1ldGhvZHM6IFR5cGVhaGVhZFRlbXBsYXRlTWV0aG9kcztcbiAgICBwcm90ZWN0ZWQgX2FjdGl2ZTogVHlwZWFoZWFkTWF0Y2g7XG4gICAgcHJvdGVjdGVkIF9tYXRjaGVzOiBUeXBlYWhlYWRNYXRjaFtdO1xuICAgIHByaXZhdGUgdWxFbGVtZW50O1xuICAgIHByaXZhdGUgbGlFbGVtZW50cztcbiAgICBjb25zdHJ1Y3Rvcihwb3NpdGlvblNlcnZpY2U6IFBvc2l0aW9uaW5nU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudDogRWxlbWVudFJlZiwgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBhY3RpdmU6IFR5cGVhaGVhZE1hdGNoO1xuICAgIG1hdGNoZXM6IFR5cGVhaGVhZE1hdGNoW107XG4gICAgcmVhZG9ubHkgaXNUb3BQb3NpdGlvbjogYm9vbGVhbjtcbiAgICByZWFkb25seSBvcHRpb25zTGlzdFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxUeXBlYWhlYWRPcHRpb25MaXN0Q29udGV4dD47XG4gICAgcmVhZG9ubHkgaXNBbmltYXRlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSBhZGFwdGl2ZVBvc2l0aW9uOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHR5cGVhaGVhZFNjcm9sbGFibGU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgdHlwZWFoZWFkT3B0aW9uc0luU2Nyb2xsYWJsZVZpZXc6IG51bWJlcjtcbiAgICByZWFkb25seSB0eXBlYWhlYWRJc0ZpcnN0SXRlbUFjdGl2ZTogYm9vbGVhbjtcbiAgICByZWFkb25seSBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPFR5cGVhaGVhZE9wdGlvbkl0ZW1Db250ZXh0PjtcbiAgICBzZWxlY3RBY3RpdmVNYXRjaChpc0FjdGl2ZUl0ZW1DaGFuZ2VkPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgYWN0aXZlQ2hhbmdlZCgpOiB2b2lkO1xuICAgIHByZXZBY3RpdmVNYXRjaCgpOiB2b2lkO1xuICAgIG5leHRBY3RpdmVNYXRjaCgpOiB2b2lkO1xuICAgIHNlbGVjdEFjdGl2ZSh2YWx1ZTogVHlwZWFoZWFkTWF0Y2gpOiB2b2lkO1xuICAgIGhpZ2hsaWdodChtYXRjaDogVHlwZWFoZWFkTWF0Y2gsIHF1ZXJ5OiBzdHJpbmdbXSB8IHN0cmluZyk6IHN0cmluZztcbiAgICBmb2N1c0xvc3QoKTogdm9pZDtcbiAgICBpc0FjdGl2ZSh2YWx1ZTogVHlwZWFoZWFkTWF0Y2gpOiBib29sZWFuO1xuICAgIHNlbGVjdE1hdGNoKHZhbHVlOiBUeXBlYWhlYWRNYXRjaCwgZT86IEV2ZW50KTogYm9vbGVhbjtcbiAgICBzZXRTY3JvbGxhYmxlTW9kZSgpOiB2b2lkO1xuICAgIHNjcm9sbFByZXZpb3VzKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIHNjcm9sbE5leHQoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIGlzU2Nyb2xsZWRJbnRvVmlldztcbiAgICBwcml2YXRlIHNjcm9sbFRvQm90dG9tO1xuICAgIHByaXZhdGUgc2Nyb2xsVG9Ub3A7XG59XG4iXX0=