import { EventEmitter, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DraggableItem } from './draggable-item';
import { DraggableItemService } from './draggable-item.service';
import * as ɵngcc0 from '@angular/core';
export declare class SortableComponent implements ControlValueAccessor {
    private static globalZoneIndex;
    /** field name if input array consists of objects */
    fieldName: string;
    /** class name for items wrapper */
    wrapperClass: string;
    /** style object for items wrapper */
    wrapperStyle: {
        [key: string]: string;
    };
    /** class name for item */
    itemClass: string;
    /** style object for item */
    itemStyle: {
        [key: string]: string;
    };
    /** class name for active item */
    itemActiveClass: string;
    /** style object for active item */
    itemActiveStyle: {
        [key: string]: string;
    };
    /** class name for placeholder */
    placeholderClass: string;
    /** style object for placeholder */
    placeholderStyle: {
        [key: string]: string;
    };
    /** placeholder item which will be shown if collection is empty */
    placeholderItem: string;
    /** used to specify a custom item template. Template variables: item and index; */
    itemTemplate: TemplateRef<any>;
    /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.
     *  Returns new items collection as a payload.
     */
    onChange: EventEmitter<any[]>;
    showPlaceholder: boolean;
    activeItem: number;
    items: SortableItem[];
    onTouched: any;
    onChanged: any;
    private transfer;
    private currentZoneIndex;
    private _items;
    constructor(transfer: DraggableItemService);
    onItemDragstart(event: DragEvent, item: SortableItem, i: number): void;
    onItemDragover(event: DragEvent, i: number): void;
    cancelEvent(event: DragEvent): void;
    onDrop(item: DraggableItem): void;
    resetActiveItem(event: DragEvent): void;
    registerOnChange(callback: () => void): void;
    registerOnTouched(callback: () => void): void;
    writeValue(value: any[]): void;
    updatePlaceholderState(): void;
    getItemStyle(isActive: boolean): {};
    private initDragstartEvent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SortableComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SortableComponent, "bs-sortable", ["bs-sortable"], { "wrapperClass": "wrapperClass"; "wrapperStyle": "wrapperStyle"; "itemClass": "itemClass"; "itemStyle": "itemStyle"; "itemActiveClass": "itemActiveClass"; "itemActiveStyle": "itemActiveStyle"; "placeholderClass": "placeholderClass"; "placeholderStyle": "placeholderStyle"; "placeholderItem": "placeholderItem"; "fieldName": "fieldName"; "itemTemplate": "itemTemplate"; }, { "onChange": "onChange"; }, never, never>;
}
export declare interface SortableItem {
    id: number;
    value: string;
    initData: any;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGFibGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNvcnRhYmxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRHJhZ2dhYmxlSXRlbSB9IGZyb20gJy4vZHJhZ2dhYmxlLWl0ZW0nO1xuaW1wb3J0IHsgRHJhZ2dhYmxlSXRlbVNlcnZpY2UgfSBmcm9tICcuL2RyYWdnYWJsZS1pdGVtLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU29ydGFibGVDb21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgZ2xvYmFsWm9uZUluZGV4O1xuICAgIC8qKiBmaWVsZCBuYW1lIGlmIGlucHV0IGFycmF5IGNvbnNpc3RzIG9mIG9iamVjdHMgKi9cbiAgICBmaWVsZE5hbWU6IHN0cmluZztcbiAgICAvKiogY2xhc3MgbmFtZSBmb3IgaXRlbXMgd3JhcHBlciAqL1xuICAgIHdyYXBwZXJDbGFzczogc3RyaW5nO1xuICAgIC8qKiBzdHlsZSBvYmplY3QgZm9yIGl0ZW1zIHdyYXBwZXIgKi9cbiAgICB3cmFwcGVyU3R5bGU6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgLyoqIGNsYXNzIG5hbWUgZm9yIGl0ZW0gKi9cbiAgICBpdGVtQ2xhc3M6IHN0cmluZztcbiAgICAvKiogc3R5bGUgb2JqZWN0IGZvciBpdGVtICovXG4gICAgaXRlbVN0eWxlOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIC8qKiBjbGFzcyBuYW1lIGZvciBhY3RpdmUgaXRlbSAqL1xuICAgIGl0ZW1BY3RpdmVDbGFzczogc3RyaW5nO1xuICAgIC8qKiBzdHlsZSBvYmplY3QgZm9yIGFjdGl2ZSBpdGVtICovXG4gICAgaXRlbUFjdGl2ZVN0eWxlOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIC8qKiBjbGFzcyBuYW1lIGZvciBwbGFjZWhvbGRlciAqL1xuICAgIHBsYWNlaG9sZGVyQ2xhc3M6IHN0cmluZztcbiAgICAvKiogc3R5bGUgb2JqZWN0IGZvciBwbGFjZWhvbGRlciAqL1xuICAgIHBsYWNlaG9sZGVyU3R5bGU6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgLyoqIHBsYWNlaG9sZGVyIGl0ZW0gd2hpY2ggd2lsbCBiZSBzaG93biBpZiBjb2xsZWN0aW9uIGlzIGVtcHR5ICovXG4gICAgcGxhY2Vob2xkZXJJdGVtOiBzdHJpbmc7XG4gICAgLyoqIHVzZWQgdG8gc3BlY2lmeSBhIGN1c3RvbSBpdGVtIHRlbXBsYXRlLiBUZW1wbGF0ZSB2YXJpYWJsZXM6IGl0ZW0gYW5kIGluZGV4OyAqL1xuICAgIGl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICAvKiogZmlyZWQgb24gYXJyYXkgY2hhbmdlIChyZW9yZGVyaW5nLCBpbnNlcnQsIHJlbW92ZSksIHNhbWUgYXMgPGNvZGU+bmdNb2RlbENoYW5nZTwvY29kZT4uXG4gICAgICogIFJldHVybnMgbmV3IGl0ZW1zIGNvbGxlY3Rpb24gYXMgYSBwYXlsb2FkLlxuICAgICAqL1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55W10+O1xuICAgIHNob3dQbGFjZWhvbGRlcjogYm9vbGVhbjtcbiAgICBhY3RpdmVJdGVtOiBudW1iZXI7XG4gICAgaXRlbXM6IFNvcnRhYmxlSXRlbVtdO1xuICAgIG9uVG91Y2hlZDogYW55O1xuICAgIG9uQ2hhbmdlZDogYW55O1xuICAgIHByaXZhdGUgdHJhbnNmZXI7XG4gICAgcHJpdmF0ZSBjdXJyZW50Wm9uZUluZGV4O1xuICAgIHByaXZhdGUgX2l0ZW1zO1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zZmVyOiBEcmFnZ2FibGVJdGVtU2VydmljZSk7XG4gICAgb25JdGVtRHJhZ3N0YXJ0KGV2ZW50OiBEcmFnRXZlbnQsIGl0ZW06IFNvcnRhYmxlSXRlbSwgaTogbnVtYmVyKTogdm9pZDtcbiAgICBvbkl0ZW1EcmFnb3ZlcihldmVudDogRHJhZ0V2ZW50LCBpOiBudW1iZXIpOiB2b2lkO1xuICAgIGNhbmNlbEV2ZW50KGV2ZW50OiBEcmFnRXZlbnQpOiB2b2lkO1xuICAgIG9uRHJvcChpdGVtOiBEcmFnZ2FibGVJdGVtKTogdm9pZDtcbiAgICByZXNldEFjdGl2ZUl0ZW0oZXZlbnQ6IERyYWdFdmVudCk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShjYWxsYmFjazogKCkgPT4gdm9pZCk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueVtdKTogdm9pZDtcbiAgICB1cGRhdGVQbGFjZWhvbGRlclN0YXRlKCk6IHZvaWQ7XG4gICAgZ2V0SXRlbVN0eWxlKGlzQWN0aXZlOiBib29sZWFuKToge307XG4gICAgcHJpdmF0ZSBpbml0RHJhZ3N0YXJ0RXZlbnQ7XG59XG5leHBvcnQgZGVjbGFyZSBpbnRlcmZhY2UgU29ydGFibGVJdGVtIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgaW5pdERhdGE6IGFueTtcbn1cbiJdfQ==