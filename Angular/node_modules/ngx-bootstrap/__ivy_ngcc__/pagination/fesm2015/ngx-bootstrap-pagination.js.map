{"version":3,"file":"ngx-bootstrap-pagination.js","sources":["ng:/ngx-bootstrap/pagination/pagination.config.ts","ng:/ngx-bootstrap/pagination/pager.component.ts","ng:/ngx-bootstrap/pagination/pagination.component.ts","ng:/ngx-bootstrap/pagination/pagination.module.ts"],"names":[],"mappings":"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","sourcesContent":["// todo: split\nimport { Injectable } from '@angular/core';\n\nimport { ConfigModel, PagerModel } from './models';\n\n/** Provides default values for Pagination and pager components */\n@Injectable()\nexport class PaginationConfig {\n  main: ConfigModel = {\n    maxSize: void 0,\n    itemsPerPage: 10,\n    boundaryLinks: false,\n    directionLinks: true,\n    firstText: 'First',\n    previousText: 'Previous',\n    nextText: 'Next',\n    lastText: 'Last',\n    pageBtnClass: '',\n    rotate: true\n  };\n  pager: PagerModel = {\n    itemsPerPage: 15,\n    previousText: 'Â« Previous',\n    nextText: 'Next Â»',\n    pageBtnClass: '',\n    align: true\n  };\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PageChangedEvent } from './pagination.component';\nimport { PaginationConfig } from './pagination.config';\n\nimport { ConfigModel, PagesModel } from './models';\n\nexport const PAGER_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => PagerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pager',\n  templateUrl: './pager.component.html',\n  providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n})\nexport class PagerComponent implements ControlValueAccessor, OnInit {\n  config: ConfigModel;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align: boolean;\n  /** limit number for page links in pager */\n  @Input() maxSize: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks: boolean;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks: boolean;\n  // labels\n  /** first button text */\n  @Input() firstText: string;\n  /** previous button text */\n  @Input() previousText: string;\n  /** next button text */\n  @Input() nextText: string;\n  /** last button text */\n  @Input() lastText: string;\n  /** if true current page will in the middle of pages list */\n  @Input() rotate: boolean;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass: string;\n\n  /** if true pagination component will be disabled */\n  @Input() disabled: boolean;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to\n   * object with current page index and number of items per page\n   */\n  @Output()\n  pageChanged: EventEmitter<PageChangedEvent> = new EventEmitter<PageChangedEvent>();\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  classMap: string;\n  pages: PagesModel[];\n\n  protected _itemsPerPage: number;\n  protected _totalItems: number;\n  protected _totalPages: number;\n  protected inited = false;\n  protected _page = 1;\n\n  constructor(private elementRef: ElementRef,\n              paginationConfig: PaginationConfig,\n              private changeDetection: ChangeDetectorRef) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(\n        Object.assign({}, paginationConfig.main, paginationConfig.pager)\n      );\n    }\n  }\n\n  configureOptions(config: ConfigModel): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize =\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate =\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks =\n      typeof this.boundaryLinks !== 'undefined'\n        ? this.boundaryLinks\n        : this.config.boundaryLinks;\n    this.directionLinks =\n      typeof this.directionLinks !== 'undefined'\n        ? this.directionLinks\n        : this.config.directionLinks;\n    this.pageBtnClass =\n      typeof this.pageBtnClass !== 'undefined'\n        ? this.pageBtnClass\n        : this.config.pageBtnClass;\n\n    // base class\n    this.itemsPerPage =\n      typeof this.itemsPerPage !== 'undefined'\n        ? this.itemsPerPage\n        : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // tslint:disable-next-line:no-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(num: number,\n                     text: string,\n                     active: boolean): { number: number; text: string; active: boolean } {\n    return {text, number: num, active};\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider, TemplateRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PaginationConfig } from './pagination.config';\nimport { ConfigModel, PagesModel, PaginationLinkContext, PaginationNumberLinkContext } from './models';\n\nexport interface PageChangedEvent {\n  itemsPerPage: number;\n  page: number;\n}\n\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pagination',\n  templateUrl: './pagination.component.html',\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\n  config: ConfigModel;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align: boolean;\n  /** limit number for page links in pager */\n  @Input() maxSize: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks: boolean;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks: boolean;\n  // labels\n  /** first button text */\n  @Input() firstText: string;\n  /** previous button text */\n  @Input() previousText: string;\n  /** next button text */\n  @Input() nextText: string;\n  /** last button text */\n  @Input() lastText: string;\n  /** if true current page will in the middle of pages list */\n  @Input() rotate: boolean;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass: string;\n  /** if true pagination component will be disabled */\n  @Input() disabled: boolean;\n  /** custom template for page link */\n  @Input() customPageTemplate: TemplateRef<PaginationNumberLinkContext>;\n  /** custom template for next link */\n  @Input() customNextTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for previous link */\n  @Input() customPreviousTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for first link */\n  @Input() customFirstTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for last link */\n  @Input() customLastTemplate: TemplateRef<PaginationLinkContext>;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n   * with current page index and number of items per page\n   */\n  @Output()\n  pageChanged = new EventEmitter<PageChangedEvent>();\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  classMap: string;\n  pages: PagesModel[];\n\n  protected _itemsPerPage: number;\n  protected _totalItems: number;\n  protected _totalPages: number;\n  protected inited = false;\n  protected _page = 1;\n\n  constructor(\n    private elementRef: ElementRef,\n    paginationConfig: PaginationConfig,\n    private changeDetection: ChangeDetectorRef\n  ) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n\n  configureOptions(config: ConfigModel): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize =\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate =\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks =\n      typeof this.boundaryLinks !== 'undefined'\n        ? this.boundaryLinks\n        : this.config.boundaryLinks;\n    this.directionLinks =\n      typeof this.directionLinks !== 'undefined'\n        ? this.directionLinks\n        : this.config.directionLinks;\n    this.pageBtnClass =\n      typeof this.pageBtnClass !== 'undefined'\n        ? this.pageBtnClass\n        : this.config.pageBtnClass;\n\n    // base class\n    this.itemsPerPage =\n      typeof this.itemsPerPage !== 'undefined'\n        ? this.itemsPerPage\n        : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // tslint:disable-next-line:no-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(\n    num: number,\n    text: string,\n    active: boolean\n  ): { number: number; text: string; active: boolean } {\n    return { text, number: num, active };\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n// tslint:disable-next-line:max-file-line-count\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { PaginationConfig } from './pagination.config';\n\nimport { PagerComponent } from './pager.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PagerComponent, PaginationComponent],\n  exports: [PagerComponent, PaginationComponent]\n})\nexport class PaginationModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: PaginationModule, providers: [PaginationConfig] };\n  }\n}\n"]}