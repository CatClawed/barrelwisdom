{"version":3,"file":"ngx-bootstrap-mini-ngrx.js","sources":["ng:/ngx-bootstrap/mini-ngrx/state.class.ts","ng:/ngx-bootstrap/mini-ngrx/store.class.ts","ng:/ngx-bootstrap/mini-ngrx/public_api.ts"],"names":[],"mappings":";;;;;;;;;;MAQa,SAAa,SAAQ,eAAkB;AACpD;AAAQ;AAEL;AAAqC;AAClB;AACtB,IAJE,YACE,aAAgB,EAChB,kBAAsC,EACtC,OAAyB;AAC1B,QACC,KAAK,CAAC,aAAa,CAAC,CAAC;AACzB;AACwB,cAAd,cAAc,GAAG,kBAAkB,CAAC,IAAI,CAC5C,SAAS,CAAC,cAAc,CAAC,CAC1B;AACL;AAAyB,cAAf,MAAM,GAAG,cAAc,CAAC,IAAI,CAChC,IAAI;AAAM;AACf;AACM;AACD;AAEC,QALI,CAAC,KAAQ,EAAE,MAAc;AACpC,YAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,gBAAU,OAAO,KAAK,CAAC;AACvB,aAAS;AACT,YACQ,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACtC,SAAO,GACD,aAAa,CACd,CAAC;AACN,QACI,MAAM,CAAC,SAAS;AAAM;AAC1B;AAEiB;AAAY,QAHR,CAAC,KAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,CAAC;AACrD,KAAG;AACH;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AC1BnL,MAAa,SAAa,SAAQ,UAAa;AAAG;AAAQ;AAChD;AACY;AAClB;AAAQ,IAFV,YACU,WAA6B,EAE7B,QAA4B;AACvC;AACA,IAAG,MAAuB;AACxB,QACC,KAAK,EAAE,CAAC;AACZ,QAPY,gBAAW,GAAX,WAAW,CAAkB;AAAC,QAE9B,aAAQ,GAAR,QAAQ,CAAoB;AAAC;AAEjC,QAKJ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,KAAG;AACH;AACO;AAAmB;AAA8B;AACxC;AAAQ,IADtB,MAAM,CAAI,WAA4B;AAAI;AACP;AACvB,cAAJ,OAAO,GAAkB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACrE,QACI,OAAO,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;AAChD,KAAG;AACH;AACO;AAAmB;AACzB;AAAmB;AAAQ,IAD1B,IAAI,CAAI,QAAwB;AAAI;AAC3B,cAAD,KAAK,GAAG,IAAI,SAAS,CAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AACzE;AACI,QAAA,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AACO;AACJ;AAAmB;AAAQ,IAD5B,QAAQ,CAAC,MAAc;AACzB,QAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,KAAG;AACH;AACO;AACA;AAAmB;AAAQ,IADhC,IAAI,CAAC,MAAc;AACrB,QAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,KAAG;AACH;AAEC;AAAQ;AACE;AAAmB;AAG9B,IAJE,KAAK,CAAC,GAAQ;AAChB,QAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChC,KAAG;AACH;AACO;AACI;AAGX,IAJE,QAAQ;AACV;AAEA,KADG;AACH,CAAC;AACD;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IA5C1D,gCAAqC;AAAC;AACnC;AAAiB;AAAgB;AACnC,IAAD,6BAAoC;AAAC;AACxC;AAAC;AAAI;AAAkC;AAMtB;AAAI;AACtB;AAEM;ACrBN,qBAIC;AACD;AACY;AAAqB,IAL/B,sBAAa;AACf;AAA+B,IAC7B,yBAAc;AAChB;AACA;AACA;AAAI;AAAkC;AAIlC;AAAI;AAAC;AAAiC","sourcesContent":["/**\n * @copyright ngrx\n */\nimport { Action, ActionReducer } from './index';\nimport { BehaviorSubject, Observable, queueScheduler } from 'rxjs';\nimport { observeOn, scan } from 'rxjs/operators';\n\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = actionsDispatcher$.pipe(\n      observeOn(queueScheduler)\n    );\n    const state$ = actionInQueue$.pipe(\n      scan((state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    ));\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    /* tslint:disable-next-line: no-any */\n    private _reducer: ActionReducer<any>,\n    /* tslint:disable-next-line: no-any */\n    state$: Observable<any>\n  ) {\n    super();\n\n    /* tslint:disable-next-line: deprecation */\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    /* tslint:disable-next-line: deprecation */\n    const mapped$: Observable<R> = this.source.pipe(map(pathOrMapFn));\n\n    return mapped$.pipe(distinctUntilChanged());\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    /* tslint:disable-next-line: deprecation */\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  /* tslint:disable-next-line: no-any */\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","export interface Action {\n  type: string;\n  /* tslint:disable-next-line: no-any */\n  payload?: any;\n}\n\nexport type ActionReducer<T> = (state: T, action: Action) => T;\n\nexport { MiniState } from './state.class';\nexport { MiniStore } from './store.class';\n"]}