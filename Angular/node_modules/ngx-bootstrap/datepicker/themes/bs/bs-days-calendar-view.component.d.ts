import { EventEmitter } from '@angular/core';
import { BsDatepickerViewMode, BsNavigationDirection, BsNavigationEvent, CellHoverEvent, DatepickerRenderOptions, DaysCalendarViewModel, DayViewModel, WeekViewModel } from '../../models';
import { BsDatepickerConfig } from '../../bs-datepicker.config';
import * as ɵngcc0 from '@angular/core';
export declare class BsDaysCalendarViewComponent {
    private _config;
    calendar: DaysCalendarViewModel;
    options: DatepickerRenderOptions;
    onNavigate: EventEmitter<BsNavigationEvent>;
    onViewMode: EventEmitter<BsDatepickerViewMode>;
    onSelect: EventEmitter<DayViewModel>;
    onHover: EventEmitter<CellHoverEvent>;
    onHoverWeek: EventEmitter<WeekViewModel>;
    isWeekHovered: boolean;
    constructor(_config: BsDatepickerConfig);
    navigateTo(event: BsNavigationDirection): void;
    changeViewMode(event: BsDatepickerViewMode): void;
    selectDay(event: DayViewModel): void;
    selectWeek(week: WeekViewModel): void;
    weekHoverHandler(cell: WeekViewModel, isHovered: boolean): void;
    hoverDay(cell: DayViewModel, isHovered: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDaysCalendarViewComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BsDaysCalendarViewComponent, "bs-days-calendar-view", never, { "calendar": "calendar"; "options": "options"; }, { "onNavigate": "onNavigate"; "onViewMode": "onViewMode"; "onSelect": "onSelect"; "onHover": "onHover"; "onHoverWeek": "onHoverWeek"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF5cy1jYWxlbmRhci12aWV3LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJicy1kYXlzLWNhbGVuZGFyLXZpZXcuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCc0RhdGVwaWNrZXJWaWV3TW9kZSwgQnNOYXZpZ2F0aW9uRGlyZWN0aW9uLCBCc05hdmlnYXRpb25FdmVudCwgQ2VsbEhvdmVyRXZlbnQsIERhdGVwaWNrZXJSZW5kZXJPcHRpb25zLCBEYXlzQ2FsZW5kYXJWaWV3TW9kZWwsIERheVZpZXdNb2RlbCwgV2Vla1ZpZXdNb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscyc7XG5pbXBvcnQgeyBCc0RhdGVwaWNrZXJDb25maWcgfSBmcm9tICcuLi8uLi9icy1kYXRlcGlja2VyLmNvbmZpZyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCc0RheXNDYWxlbmRhclZpZXdDb21wb25lbnQge1xuICAgIHByaXZhdGUgX2NvbmZpZztcbiAgICBjYWxlbmRhcjogRGF5c0NhbGVuZGFyVmlld01vZGVsO1xuICAgIG9wdGlvbnM6IERhdGVwaWNrZXJSZW5kZXJPcHRpb25zO1xuICAgIG9uTmF2aWdhdGU6IEV2ZW50RW1pdHRlcjxCc05hdmlnYXRpb25FdmVudD47XG4gICAgb25WaWV3TW9kZTogRXZlbnRFbWl0dGVyPEJzRGF0ZXBpY2tlclZpZXdNb2RlPjtcbiAgICBvblNlbGVjdDogRXZlbnRFbWl0dGVyPERheVZpZXdNb2RlbD47XG4gICAgb25Ib3ZlcjogRXZlbnRFbWl0dGVyPENlbGxIb3ZlckV2ZW50PjtcbiAgICBvbkhvdmVyV2VlazogRXZlbnRFbWl0dGVyPFdlZWtWaWV3TW9kZWw+O1xuICAgIGlzV2Vla0hvdmVyZWQ6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoX2NvbmZpZzogQnNEYXRlcGlja2VyQ29uZmlnKTtcbiAgICBuYXZpZ2F0ZVRvKGV2ZW50OiBCc05hdmlnYXRpb25EaXJlY3Rpb24pOiB2b2lkO1xuICAgIGNoYW5nZVZpZXdNb2RlKGV2ZW50OiBCc0RhdGVwaWNrZXJWaWV3TW9kZSk6IHZvaWQ7XG4gICAgc2VsZWN0RGF5KGV2ZW50OiBEYXlWaWV3TW9kZWwpOiB2b2lkO1xuICAgIHNlbGVjdFdlZWsod2VlazogV2Vla1ZpZXdNb2RlbCk6IHZvaWQ7XG4gICAgd2Vla0hvdmVySGFuZGxlcihjZWxsOiBXZWVrVmlld01vZGVsLCBpc0hvdmVyZWQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIGhvdmVyRGF5KGNlbGw6IERheVZpZXdNb2RlbCwgaXNIb3ZlcmVkOiBib29sZWFuKTogdm9pZDtcbn1cbiJdfQ==