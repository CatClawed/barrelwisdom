import { TimeUnit } from 'ngx-bootstrap/chronos';
import { Action } from 'ngx-bootstrap/mini-ngrx';
import { BsDatepickerViewMode, BsViewNavigationEvent, CellHoverEvent, DatepickerRenderOptions, DatepickerDateCustomClasses } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerActions {
    static readonly CALCULATE = "[datepicker] calculate dates matrix";
    static readonly FORMAT = "[datepicker] format datepicker values";
    static readonly FLAG = "[datepicker] set flags";
    static readonly SELECT = "[datepicker] select date";
    static readonly NAVIGATE_OFFSET = "[datepicker] shift view date";
    static readonly NAVIGATE_TO = "[datepicker] change view date";
    static readonly SET_OPTIONS = "[datepicker] update render options";
    static readonly HOVER = "[datepicker] hover date";
    static readonly CHANGE_VIEWMODE = "[datepicker] switch view mode";
    static readonly SET_MIN_DATE = "[datepicker] set min date";
    static readonly SET_MAX_DATE = "[datepicker] set max date";
    static readonly SET_DAYSDISABLED = "[datepicker] set days disabled";
    static readonly SET_DATESDISABLED = "[datepicker] set dates disabled";
    static readonly SET_DATESENABLED = "[datepicker] set dates enabled";
    static readonly SET_IS_DISABLED = "[datepicker] set is disabled";
    static readonly SET_DATE_CUSTOM_CLASSES = "[datepicker] set date custom classes";
    static readonly SET_LOCALE = "[datepicker] set datepicker locale";
    static readonly SELECT_RANGE = "[daterangepicker] select dates range";
    calculate(): Action;
    format(): Action;
    flag(): Action;
    select(date: Date): Action;
    changeViewMode(event: BsDatepickerViewMode): Action;
    navigateTo(event: BsViewNavigationEvent): Action;
    navigateStep(step: TimeUnit): Action;
    setOptions(options: DatepickerRenderOptions): Action;
    selectRange(value: Date[]): Action;
    hoverDay(event: CellHoverEvent): Action;
    minDate(date: Date): Action;
    maxDate(date: Date): Action;
    daysDisabled(days: number[]): Action;
    datesDisabled(dates: Date[]): Action;
    datesEnabled(dates: Date[]): Action;
    isDisabled(value: boolean): Action;
    setDateCustomClasses(value: DatepickerDateCustomClasses[]): Action;
    setLocale(locale: string): Action;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerActions, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerActions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5hY3Rpb25zLmQudHMiLCJzb3VyY2VzIjpbImJzLWRhdGVwaWNrZXIuYWN0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaW1lVW5pdCB9IGZyb20gJ25neC1ib290c3RyYXAvY2hyb25vcyc7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICduZ3gtYm9vdHN0cmFwL21pbmktbmdyeCc7XG5pbXBvcnQgeyBCc0RhdGVwaWNrZXJWaWV3TW9kZSwgQnNWaWV3TmF2aWdhdGlvbkV2ZW50LCBDZWxsSG92ZXJFdmVudCwgRGF0ZXBpY2tlclJlbmRlck9wdGlvbnMsIERhdGVwaWNrZXJEYXRlQ3VzdG9tQ2xhc3NlcyB9IGZyb20gJy4uL21vZGVscyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCc0RhdGVwaWNrZXJBY3Rpb25zIHtcbiAgICBzdGF0aWMgcmVhZG9ubHkgQ0FMQ1VMQVRFID0gXCJbZGF0ZXBpY2tlcl0gY2FsY3VsYXRlIGRhdGVzIG1hdHJpeFwiO1xuICAgIHN0YXRpYyByZWFkb25seSBGT1JNQVQgPSBcIltkYXRlcGlja2VyXSBmb3JtYXQgZGF0ZXBpY2tlciB2YWx1ZXNcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgRkxBRyA9IFwiW2RhdGVwaWNrZXJdIHNldCBmbGFnc1wiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRUxFQ1QgPSBcIltkYXRlcGlja2VyXSBzZWxlY3QgZGF0ZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBOQVZJR0FURV9PRkZTRVQgPSBcIltkYXRlcGlja2VyXSBzaGlmdCB2aWV3IGRhdGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgTkFWSUdBVEVfVE8gPSBcIltkYXRlcGlja2VyXSBjaGFuZ2UgdmlldyBkYXRlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9PUFRJT05TID0gXCJbZGF0ZXBpY2tlcl0gdXBkYXRlIHJlbmRlciBvcHRpb25zXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IEhPVkVSID0gXCJbZGF0ZXBpY2tlcl0gaG92ZXIgZGF0ZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBDSEFOR0VfVklFV01PREUgPSBcIltkYXRlcGlja2VyXSBzd2l0Y2ggdmlldyBtb2RlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9NSU5fREFURSA9IFwiW2RhdGVwaWNrZXJdIHNldCBtaW4gZGF0ZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfTUFYX0RBVEUgPSBcIltkYXRlcGlja2VyXSBzZXQgbWF4IGRhdGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0RBWVNESVNBQkxFRCA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXlzIGRpc2FibGVkXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9EQVRFU0RJU0FCTEVEID0gXCJbZGF0ZXBpY2tlcl0gc2V0IGRhdGVzIGRpc2FibGVkXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9EQVRFU0VOQUJMRUQgPSBcIltkYXRlcGlja2VyXSBzZXQgZGF0ZXMgZW5hYmxlZFwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfSVNfRElTQUJMRUQgPSBcIltkYXRlcGlja2VyXSBzZXQgaXMgZGlzYWJsZWRcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0RBVEVfQ1VTVE9NX0NMQVNTRVMgPSBcIltkYXRlcGlja2VyXSBzZXQgZGF0ZSBjdXN0b20gY2xhc3Nlc1wiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfTE9DQUxFID0gXCJbZGF0ZXBpY2tlcl0gc2V0IGRhdGVwaWNrZXIgbG9jYWxlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFTEVDVF9SQU5HRSA9IFwiW2RhdGVyYW5nZXBpY2tlcl0gc2VsZWN0IGRhdGVzIHJhbmdlXCI7XG4gICAgY2FsY3VsYXRlKCk6IEFjdGlvbjtcbiAgICBmb3JtYXQoKTogQWN0aW9uO1xuICAgIGZsYWcoKTogQWN0aW9uO1xuICAgIHNlbGVjdChkYXRlOiBEYXRlKTogQWN0aW9uO1xuICAgIGNoYW5nZVZpZXdNb2RlKGV2ZW50OiBCc0RhdGVwaWNrZXJWaWV3TW9kZSk6IEFjdGlvbjtcbiAgICBuYXZpZ2F0ZVRvKGV2ZW50OiBCc1ZpZXdOYXZpZ2F0aW9uRXZlbnQpOiBBY3Rpb247XG4gICAgbmF2aWdhdGVTdGVwKHN0ZXA6IFRpbWVVbml0KTogQWN0aW9uO1xuICAgIHNldE9wdGlvbnMob3B0aW9uczogRGF0ZXBpY2tlclJlbmRlck9wdGlvbnMpOiBBY3Rpb247XG4gICAgc2VsZWN0UmFuZ2UodmFsdWU6IERhdGVbXSk6IEFjdGlvbjtcbiAgICBob3ZlckRheShldmVudDogQ2VsbEhvdmVyRXZlbnQpOiBBY3Rpb247XG4gICAgbWluRGF0ZShkYXRlOiBEYXRlKTogQWN0aW9uO1xuICAgIG1heERhdGUoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcbiAgICBkYXlzRGlzYWJsZWQoZGF5czogbnVtYmVyW10pOiBBY3Rpb247XG4gICAgZGF0ZXNEaXNhYmxlZChkYXRlczogRGF0ZVtdKTogQWN0aW9uO1xuICAgIGRhdGVzRW5hYmxlZChkYXRlczogRGF0ZVtdKTogQWN0aW9uO1xuICAgIGlzRGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pOiBBY3Rpb247XG4gICAgc2V0RGF0ZUN1c3RvbUNsYXNzZXModmFsdWU6IERhdGVwaWNrZXJEYXRlQ3VzdG9tQ2xhc3Nlc1tdKTogQWN0aW9uO1xuICAgIHNldExvY2FsZShsb2NhbGU6IHN0cmluZyk6IEFjdGlvbjtcbn1cbiJdfQ==