{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng2-charts/lib/default-colors.ts","ng://ng2-charts/lib/get-colors.ts","ng://ng2-charts/lib/theme.service.ts","ng://ng2-charts/lib/base-chart.directive.ts","ng://ng2-charts/lib/charts.module.ts","ng://ng2-charts/lib/monkey-patch-chart-js-legend.ts","ng://ng2-charts/lib/monkey-patch-chart-js-tooltip.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","defaultColors","getColors","chartType","index","count","formatPieColors","generateColors","backgroundColor","colors","map","color","rgba","borderColor","hoverBackgroundColor","hoverBorderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","formatLineColor","generateColor","formatBarColor","Error","colour","alpha","concat","join","getRandomInt","min","max","Math","floor","random","getRandomColor","colorsArr","Array","ThemeService","pColorschemesOptions","colorschemesOptions","BehaviorSubject","setColorschemesOptions","options","getColorschemesOptions","Injectable","args","providedIn","Default","Update","Refresh","BaseChartDirective","element","themeService","chartClick","EventEmitter","chartHover","old","dataExists","dataLength","datasetsExists","datasetsLength","datasetsDataObjects","datasetsDataLengths","colorsExists","labelsExist","labels","legendExists","legend","subs","registerPlugin","plugin","chartJs.Chart","plugins","register","unregisterPlugin","unregister","ngOnInit","_this","ctx","nativeElement","getContext","refresh","subscribe","themeChanged","ngDoCheck","chart","updateRequired","UpdateType","wantUpdate","x","data","propagateDataToDatasets","datasets","filter","updateColors","colorsEqual","copyColor","labelsEqual","copyLabel","position","update","a","isArray","__spread","b","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointRadius","pointHoverRadius","pointHitRadius","pointHoverBorderWidth","pointStyle","hoverBorderWidth","forEach","elm","ngOnChanges","changes","currentValue","propagateDatasetsToData","config","display","generateLegend","ngOnDestroy","destroy","unsubscribe","duration","lazy","hideDataset","hidden","getDatasetMeta","isDatasetHidden","toBase64Image","getChartConfiguration","getDatasets","hover","onHover","event","active","emit","onClick","mergedOptions","smartMerge","type","getChartBuilder","chartConfig","overrides","level","cloneDeep","keys","key","arrayElements","isMultiLineLabel","label","joinLabel","newDataValues","isMultiDataSet","dataset","splice","Directive","selector","exportAs","ElementRef","Input","Output","ChartsModule","NgModule","declarations","imports","exports","Chart","getAll","id","_element","fit","me","opts","labelOpts","labelFont","helpers","_parseFont","fontSize","size","hitboxes","legendHitBoxes","minSize","isHorizontal","width","maxWidth","height","maxHeight","getMaxLineWidth","textLines","textLine","measureText","reduce","acc","v","font","string","lineWidths","lineHeights","currentLineHeight","lineIndex","textAlign","textBaseline","each","legendItems","legendItem","text","padding","getBoxWidth","lineOrColumnIndex","left","top","vPadding","columnWidths","columnHeights","totalWidth","currentColWidth","currentColHeight","columnIndex","itemWidth","draw","globalDefaults","defaults","global","defaultColor","lineDefault","elements","line","legendHeight","legendWidth","cursor","fontColor","valueOrDefault","defaultFontColor","lineWidth","strokeStyle","fillStyle","boxWidth","fillText","y","textWidth","halfFontSize","xLeft","yMiddle","lineOffset","w","h","beginPath","moveTo","lineTo","stroke","drawCrossOver","drawStrikeThrough","alignmentOffset","dimension","blockSize","align","boxTopOffset","topOffset","trunc","isNaN","save","lineCap","lineDashOffset","lineJoin","setLineDash","lineDash","usePointStyle","radius","SQRT2","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","drawLegendBox","console","log","Tooltip","drawBody","pt","vm","textColor","bodyFontSize","bodySpacing","bodyAlign","_bodyAlign","body","drawColorBoxes","displayColors","labelColors","xLinePadding","colorX","getAlignedX","fontString","_bodyFontStyle","_bodyFontFamily","fillLineOfText","bodyFontColor","beforeBody","bodyItem","labelTextColors","before","legendColorBackground","lines","after","afterBody","xPadding"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const defaultColors: Array<number[]> = [\r\n  [255, 99, 132],\r\n  [54, 162, 235],\r\n  [255, 206, 86],\r\n  [231, 233, 237],\r\n  [75, 192, 192],\r\n  [151, 187, 205],\r\n  [220, 220, 220],\r\n  [247, 70, 74],\r\n  [70, 191, 189],\r\n  [253, 180, 92],\r\n  [148, 159, 177],\r\n  [77, 83, 96]\r\n];\r\n","import { Color } from './color';\r\nimport { Colors } from './colors';\r\nimport { defaultColors } from './default-colors';\r\n\r\n/**\r\n * Generate colors by chart type\r\n */\r\nexport function getColors(chartType: string, index: number, count: number): Color {\r\n  if (chartType === 'pie' || chartType === 'doughnut') {\r\n    return formatPieColors(generateColors(count));\r\n  }\r\n\r\n  if (chartType === 'polarArea') {\r\n    return formatPolarAreaColors(generateColors(count));\r\n  }\r\n\r\n  if (chartType === 'line' || chartType === 'radar') {\r\n    return formatLineColor(generateColor(index));\r\n  }\r\n\r\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\r\n    return formatBarColor(generateColor(index));\r\n  }\r\n\r\n  if (chartType === 'bubble') {\r\n    return formatPieColors(generateColors(count));\r\n  }\r\n\r\n  if (chartType === 'scatter') {\r\n    return formatPieColors(generateColors(count));\r\n  }\r\n\r\n  throw new Error(`getColors - Unsupported chart type ${chartType}`);\r\n}\r\n\r\nfunction rgba(colour: Array<number>, alpha: number): string {\r\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\r\n}\r\n\r\nfunction getRandomInt(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction formatLineColor(colors: Array<number>): Color {\r\n  return {\r\n    backgroundColor: rgba(colors, 0.4),\r\n    borderColor: rgba(colors, 1),\r\n    pointBackgroundColor: rgba(colors, 1),\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: rgba(colors, 0.8)\r\n  };\r\n}\r\n\r\nfunction formatBarColor(colors: Array<number>): Color {\r\n  return {\r\n    backgroundColor: rgba(colors, 0.6),\r\n    borderColor: rgba(colors, 1),\r\n    hoverBackgroundColor: rgba(colors, 0.8),\r\n    hoverBorderColor: rgba(colors, 1)\r\n  };\r\n}\r\n\r\nfunction formatPieColors(colors: Array<number[]>): Colors {\r\n  return {\r\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\r\n    borderColor: colors.map(() => '#fff'),\r\n    pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\r\n    pointBorderColor: colors.map(() => '#fff'),\r\n    pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\r\n    pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\r\n  };\r\n}\r\n\r\nfunction formatPolarAreaColors(colors: Array<number[]>): Color {\r\n  return {\r\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\r\n    borderColor: colors.map((color: number[]) => rgba(color, 1)),\r\n    hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 0.8)),\r\n    hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\r\n  };\r\n}\r\n\r\nfunction getRandomColor(): number[] {\r\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\r\n}\r\n\r\n/**\r\n * Generate colors for line|bar charts\r\n */\r\nfunction generateColor(index: number): number[] {\r\n  return defaultColors[index] || getRandomColor();\r\n}\r\n\r\n/**\r\n * Generate colors for pie|doughnut charts\r\n */\r\nfunction generateColors(count: number): Array<number[]> {\r\n  const colorsArr: Array<number[]> = new Array(count);\r\n  for (let i = 0; i < count; i++) {\r\n    colorsArr[i] = defaultColors[i] || getRandomColor();\r\n  }\r\n  return colorsArr;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ChartOptions } from 'chart.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private pColorschemesOptions: ChartOptions = {};\r\n  public colorschemesOptions = new BehaviorSubject<ChartOptions>({});\r\n\r\n  constructor() { }\r\n\r\n  setColorschemesOptions(options: ChartOptions) {\r\n    this.pColorschemesOptions = options;\r\n    this.colorschemesOptions.next(options);\r\n  }\r\n\r\n  getColorschemesOptions() {\r\n    return this.pColorschemesOptions;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  OnDestroy,\r\n  OnChanges,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  DoCheck,\r\n} from '@angular/core';\r\nimport * as chartJs from 'chart.js';\r\nimport { getColors } from './get-colors';\r\nimport { Color } from './color';\r\nimport { ThemeService } from './theme.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport type SingleDataSet = (number[] | chartJs.ChartPoint[]);\r\nexport type MultiDataSet = (number[] | chartJs.ChartPoint[])[];\r\nexport type SingleOrMultiDataSet = SingleDataSet | MultiDataSet;\r\n\r\nexport type PluginServiceGlobalRegistrationAndOptions = chartJs.PluginServiceGlobalRegistration & chartJs.PluginServiceRegistrationOptions;\r\nexport type SingleLineLabel = string;\r\nexport type MultiLineLabel = string[];\r\nexport type Label = SingleLineLabel | MultiLineLabel;\r\n\r\ninterface OldState {\r\n  dataExists: boolean;\r\n  dataLength: number;\r\n  datasetsExists: boolean;\r\n  datasetsLength: number;\r\n  datasetsDataObjects: any[];\r\n  datasetsDataLengths: number[];\r\n  colorsExists: boolean;\r\n  colors: Color[];\r\n  labelsExist: boolean;\r\n  labels: Label[];\r\n  legendExists: boolean;\r\n  legend: {\r\n    position?: string;\r\n  };\r\n}\r\n\r\nenum UpdateType {\r\n  Default,\r\n  Update,\r\n  Refresh\r\n}\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'canvas[baseChart]',\r\n  exportAs: 'base-chart'\r\n})\r\nexport class BaseChartDirective implements OnDestroy, OnChanges, OnInit, OnDestroy, DoCheck {\r\n  @Input() public data: SingleOrMultiDataSet;\r\n  @Input() public datasets: chartJs.ChartDataSets[];\r\n  @Input() public labels: Label[];\r\n  @Input() public options: chartJs.ChartOptions = {};\r\n  @Input() public chartType: chartJs.ChartType;\r\n  @Input() public colors: Color[];\r\n  @Input() public legend: boolean;\r\n  @Input() public plugins: PluginServiceGlobalRegistrationAndOptions[];\r\n\r\n  @Output() public chartClick: EventEmitter<{ event?: MouseEvent, active?: {}[] }> = new EventEmitter();\r\n  @Output() public chartHover: EventEmitter<{ event: MouseEvent, active: {}[] }> = new EventEmitter();\r\n\r\n  public ctx: string;\r\n  public chart: Chart;\r\n\r\n  private old: OldState = {\r\n    dataExists: false,\r\n    dataLength: 0,\r\n    datasetsExists: false,\r\n    datasetsLength: 0,\r\n    datasetsDataObjects: [],\r\n    datasetsDataLengths: [],\r\n    colorsExists: false,\r\n    colors: [],\r\n    labelsExist: false,\r\n    labels: [],\r\n    legendExists: false,\r\n    legend: {},\r\n  };\r\n\r\n  private subs: Subscription[] = [];\r\n\r\n  /**\r\n   * Register a plugin.\r\n   */\r\n  public static registerPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\r\n    chartJs.Chart.plugins.register(plugin);\r\n  }\r\n\r\n  public static unregisterPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\r\n    chartJs.Chart.plugins.unregister(plugin);\r\n  }\r\n\r\n  public constructor(\r\n    private element: ElementRef,\r\n    private themeService: ThemeService,\r\n  ) { }\r\n\r\n  public ngOnInit() {\r\n    this.ctx = this.element.nativeElement.getContext('2d');\r\n    this.refresh();\r\n    this.subs.push(this.themeService.colorschemesOptions.subscribe(r => this.themeChanged(r)));\r\n  }\r\n\r\n  private themeChanged(options: {}) {\r\n    this.refresh();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (!this.chart) {\r\n      return;\r\n    }\r\n    let updateRequired = UpdateType.Default;\r\n    const wantUpdate = (x: UpdateType) => {\r\n      updateRequired = x > updateRequired ? x : updateRequired;\r\n    };\r\n\r\n    if (!!this.data !== this.old.dataExists) {\r\n      this.propagateDataToDatasets(this.data);\r\n\r\n      this.old.dataExists = !!this.data;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.data && this.data.length !== this.old.dataLength) {\r\n      this.old.dataLength = this.data && this.data.length || 0;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.datasets !== this.old.datasetsExists) {\r\n      this.old.datasetsExists = !!this.datasets;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\r\n      this.old.datasetsLength = this.datasets && this.datasets.length || 0;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.datasets && this.datasets.filter((x, i) => x.data !== this.old.datasetsDataObjects[i]).length) {\r\n      this.old.datasetsDataObjects = this.datasets.map(x => x.data);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.datasets && this.datasets.filter((x, i) => x.data.length !== this.old.datasetsDataLengths[i]).length) {\r\n      this.old.datasetsDataLengths = this.datasets.map(x => x.data.length);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.colors !== this.old.colorsExists) {\r\n      this.old.colorsExists = !!this.colors;\r\n\r\n      this.updateColors();\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    // This smells of inefficiency, might need to revisit this\r\n    if (this.colors && this.colors.filter((x, i) => !this.colorsEqual(x, this.old.colors[i])).length) {\r\n      this.old.colors = this.colors.map(x => this.copyColor(x));\r\n\r\n      this.updateColors();\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.labels !== this.old.labelsExist) {\r\n      this.old.labelsExist = !!this.labels;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.labels && this.labels.filter((x, i) => !this.labelsEqual(x, this.old.labels[i])).length) {\r\n      this.old.labels = this.labels.map(x => this.copyLabel(x));\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.options.legend !== this.old.legendExists) {\r\n      this.old.legendExists = !!this.options.legend;\r\n\r\n      wantUpdate(UpdateType.Refresh);\r\n    }\r\n\r\n    if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\r\n      this.old.legend.position = this.options.legend.position;\r\n\r\n      wantUpdate(UpdateType.Refresh);\r\n    }\r\n\r\n    switch (updateRequired as UpdateType) {\r\n      case UpdateType.Default:\r\n        break;\r\n      case UpdateType.Update:\r\n        this.update();\r\n        break;\r\n      case UpdateType.Refresh:\r\n        this.refresh();\r\n        break;\r\n    }\r\n  }\r\n\r\n  copyLabel(a: Label): Label {\r\n    if (Array.isArray(a)) {\r\n      return [...a];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  labelsEqual(a: Label, b: Label) {\r\n    return true\r\n      && Array.isArray(a) === Array.isArray(b)\r\n      && (Array.isArray(a) || a === b)\r\n      && (!Array.isArray(a) || a.length === b.length)\r\n      && (!Array.isArray(a) || a.filter((x, i) => x !== b[i]).length === 0)\r\n      ;\r\n  }\r\n\r\n  copyColor(a: Color): Color {\r\n    const rc: Color = {\r\n      backgroundColor: a.backgroundColor,\r\n      borderWidth: a.borderWidth,\r\n      borderColor: a.borderColor,\r\n      borderCapStyle: a.borderCapStyle,\r\n      borderDash: a.borderDash,\r\n      borderDashOffset: a.borderDashOffset,\r\n      borderJoinStyle: a.borderJoinStyle,\r\n      pointBorderColor: a.pointBorderColor,\r\n      pointBackgroundColor: a.pointBackgroundColor,\r\n      pointBorderWidth: a.pointBorderWidth,\r\n      pointRadius: a.pointRadius,\r\n      pointHoverRadius: a.pointHoverRadius,\r\n      pointHitRadius: a.pointHitRadius,\r\n      pointHoverBackgroundColor: a.pointHoverBackgroundColor,\r\n      pointHoverBorderColor: a.pointHoverBorderColor,\r\n      pointHoverBorderWidth: a.pointHoverBorderWidth,\r\n      pointStyle: a.pointStyle,\r\n      hoverBackgroundColor: a.hoverBackgroundColor,\r\n      hoverBorderColor: a.hoverBorderColor,\r\n      hoverBorderWidth: a.hoverBorderWidth,\r\n    };\r\n\r\n    return rc;\r\n  }\r\n\r\n  colorsEqual(a: Color, b: Color) {\r\n    if (!a !== !b) {\r\n      return false;\r\n    }\r\n    return !a || true\r\n      && (a.backgroundColor === b.backgroundColor)\r\n      && (a.borderWidth === b.borderWidth)\r\n      && (a.borderColor === b.borderColor)\r\n      && (a.borderCapStyle === b.borderCapStyle)\r\n      && (a.borderDash === b.borderDash)\r\n      && (a.borderDashOffset === b.borderDashOffset)\r\n      && (a.borderJoinStyle === b.borderJoinStyle)\r\n      && (a.pointBorderColor === b.pointBorderColor)\r\n      && (a.pointBackgroundColor === b.pointBackgroundColor)\r\n      && (a.pointBorderWidth === b.pointBorderWidth)\r\n      && (a.pointRadius === b.pointRadius)\r\n      && (a.pointHoverRadius === b.pointHoverRadius)\r\n      && (a.pointHitRadius === b.pointHitRadius)\r\n      && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\r\n      && (a.pointHoverBorderColor === b.pointHoverBorderColor)\r\n      && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\r\n      && (a.pointStyle === b.pointStyle)\r\n      && (a.hoverBackgroundColor === b.hoverBackgroundColor)\r\n      && (a.hoverBorderColor === b.hoverBorderColor)\r\n      && (a.hoverBorderWidth === b.hoverBorderWidth)\r\n      ;\r\n  }\r\n\r\n  updateColors() {\r\n    this.datasets.forEach((elm, index) => {\r\n      if (this.colors && this.colors[index]) {\r\n        Object.assign(elm, this.colors[index]);\r\n      } else {\r\n        Object.assign(elm, getColors(this.chartType, index, elm.data.length), { ...elm });\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    let updateRequired = UpdateType.Default;\r\n    const wantUpdate = (x: UpdateType) => {\r\n      updateRequired = x > updateRequired ? x : updateRequired;\r\n    };\r\n\r\n    // Check if the changes are in the data or datasets or labels or legend\r\n\r\n    if (changes.hasOwnProperty('data') && changes.data.currentValue) {\r\n      this.propagateDataToDatasets(changes.data.currentValue);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\r\n      this.propagateDatasetsToData(changes.datasets.currentValue);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('labels')) {\r\n      if (this.chart) {\r\n        this.chart.data.labels = changes.labels.currentValue;\r\n      }\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('legend')) {\r\n      if (this.chart) {\r\n        this.chart.config.options.legend.display = changes.legend.currentValue;\r\n        this.chart.generateLegend();\r\n      }\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('options')) {\r\n      wantUpdate(UpdateType.Refresh);\r\n    }\r\n\r\n    switch (updateRequired as UpdateType) {\r\n      case UpdateType.Update:\r\n        this.update();\r\n        break;\r\n      case UpdateType.Refresh:\r\n      case UpdateType.Default:\r\n        this.refresh();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n      this.chart = void 0;\r\n    }\r\n    this.subs.forEach(x => x.unsubscribe());\r\n  }\r\n\r\n  public update(duration?: any, lazy?: any) {\r\n    if (this.chart) {\r\n      return this.chart.update(duration, lazy);\r\n    }\r\n  }\r\n\r\n  public hideDataset(index: number, hidden: boolean) {\r\n    this.chart.getDatasetMeta(index).hidden = hidden;\r\n    this.chart.update();\r\n  }\r\n\r\n  public isDatasetHidden(index: number): boolean {\r\n    return this.chart.getDatasetMeta(index).hidden;\r\n  }\r\n\r\n  public toBase64Image(): string {\r\n    return this.chart.toBase64Image();\r\n  }\r\n\r\n  public getChartConfiguration(): chartJs.ChartConfiguration {\r\n    const datasets = this.getDatasets();\r\n\r\n    const options = Object.assign({}, this.options);\r\n    if (this.legend === false) {\r\n      options.legend = { display: false };\r\n    }\r\n    // hook for onHover and onClick events\r\n    options.hover = options.hover || {};\r\n    if (!options.hover.onHover) {\r\n      options.hover.onHover = (event: MouseEvent, active: {}[]) => {\r\n        if (active && !active.length) {\r\n          return;\r\n        }\r\n        this.chartHover.emit({ event, active });\r\n      };\r\n    }\r\n\r\n    if (!options.onClick) {\r\n      options.onClick = (event?: MouseEvent, active?: {}[]) => {\r\n        this.chartClick.emit({ event, active });\r\n      };\r\n    }\r\n\r\n    const mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\r\n\r\n    const chartConfig: chartJs.ChartConfiguration = {\r\n      type: this.chartType,\r\n      data: {\r\n        labels: this.labels || [],\r\n        datasets\r\n      },\r\n      plugins: this.plugins,\r\n      options: mergedOptions,\r\n    };\r\n\r\n    return chartConfig;\r\n  }\r\n\r\n  public getChartBuilder(ctx: string/*, data:any[], options:any*/): Chart {\r\n    const chartConfig = this.getChartConfiguration();\r\n    return new chartJs.Chart(ctx, chartConfig);\r\n  }\r\n\r\n  smartMerge(options: any, overrides: any, level: number = 0): any {\r\n    if (level === 0) {\r\n      options = cloneDeep(options);\r\n    }\r\n    const keysToUpdate = Object.keys(overrides);\r\n    keysToUpdate.forEach(key => {\r\n      if (Array.isArray(overrides[key])) {\r\n        const arrayElements = options[key];\r\n        if (arrayElements) {\r\n          arrayElements.forEach(r => {\r\n            this.smartMerge(r, overrides[key][0], level + 1);\r\n          });\r\n        }\r\n      } else if (typeof (overrides[key]) === 'object') {\r\n        if (!(key in options)) {\r\n          options[key] = {};\r\n        }\r\n        this.smartMerge(options[key], overrides[key], level + 1);\r\n      } else {\r\n        options[key] = overrides[key];\r\n      }\r\n    });\r\n    if (level === 0) {\r\n      return options;\r\n    }\r\n  }\r\n\r\n  private isMultiLineLabel(label: Label): label is MultiLineLabel {\r\n    return Array.isArray(label);\r\n  }\r\n\r\n  private joinLabel(label: Label): string {\r\n    if (!label) {\r\n      return null;\r\n    }\r\n    if (this.isMultiLineLabel(label)) {\r\n      return label.join(' ');\r\n    } else {\r\n      return label;\r\n    }\r\n  }\r\n\r\n  private propagateDatasetsToData(datasets: chartJs.ChartDataSets[]) {\r\n    this.data = this.datasets.map(r => r.data);\r\n    if (this.chart) {\r\n      this.chart.data.datasets = datasets;\r\n    }\r\n    this.updateColors();\r\n  }\r\n\r\n  private propagateDataToDatasets(newDataValues: SingleOrMultiDataSet): void {\r\n    if (this.isMultiDataSet(newDataValues)) {\r\n      if (this.datasets && newDataValues.length === this.datasets.length) {\r\n        this.datasets.forEach((dataset, i: number) => {\r\n          dataset.data = newDataValues[i];\r\n        });\r\n      } else {\r\n        this.datasets = newDataValues.map((data: number[], index: number) => {\r\n          return { data, label: this.joinLabel(this.labels[index]) || `Label ${index}` };\r\n        });\r\n        if (this.chart) {\r\n          this.chart.data.datasets = this.datasets;\r\n        }\r\n      }\r\n    } else {\r\n      if (!this.datasets) {\r\n        this.datasets = [{ data: newDataValues }];\r\n        if (this.chart) {\r\n          this.chart.data.datasets = this.datasets;\r\n        }\r\n      } else {\r\n        this.datasets[0].data = newDataValues;\r\n        this.datasets.splice(1); // Remove all elements but the first\r\n      }\r\n    }\r\n    this.updateColors();\r\n  }\r\n\r\n  private isMultiDataSet(data: SingleOrMultiDataSet): data is MultiDataSet {\r\n    return Array.isArray(data[0]);\r\n  }\r\n\r\n  private getDatasets() {\r\n    if (!this.datasets && !this.data) {\r\n      throw new Error(`ng-charts configuration error, data or datasets field are required to render chart ${this.chartType}`);\r\n    }\r\n\r\n    // If `datasets` is defined, use it over the `data` property.\r\n    if (this.datasets) {\r\n      this.propagateDatasetsToData(this.datasets);\r\n      return this.datasets;\r\n    }\r\n\r\n    if (this.data) {\r\n      this.propagateDataToDatasets(this.data);\r\n      return this.datasets;\r\n    }\r\n  }\r\n\r\n  private refresh() {\r\n    // if (this.options && this.options.responsive) {\r\n    //   setTimeout(() => this.refresh(), 50);\r\n    // }\r\n\r\n    // todo: remove this line, it is producing flickering\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n      this.chart = void 0;\r\n    }\r\n    if (this.ctx) {\r\n      this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BaseChartDirective } from './base-chart.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BaseChartDirective\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    BaseChartDirective\r\n  ]\r\n})\r\nexport class ChartsModule { }\r\n","// tslint:disable:variable-name\r\n// tslint:disable:no-var-keyword\r\n// tslint:disable:prefer-const\r\n// tslint:disable:only-arrow-functions\r\n// tslint:disable:one-variable-per-declaration\r\n// tslint:disable:object-literal-shorthand\r\n// tslint:disable:space-before-function-paren\r\n\r\ndeclare class Chart {\r\n  static readonly Chart: typeof Chart;\r\n  static readonly Tooltip: any;\r\n  static readonly helpers: any;\r\n  static readonly defaults: any;\r\n  static readonly plugins: any;\r\n}\r\n\r\nexport function monkeyPatchChartJsLegend() {\r\n  if (typeof Chart === 'undefined') {\r\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\r\n    return;\r\n  }\r\n  const plugins = Chart.plugins.getAll();\r\n  const legend = plugins.filter(p => p.id === 'legend')[0];\r\n  legend._element.prototype.fit = fit;\r\n  legend._element.prototype.draw = draw;\r\n\r\n  const helpers = Chart.helpers;\r\n  const defaults = Chart.defaults;\r\n  const valueOrDefault = helpers.valueOrDefault;\r\n\r\n  function getBoxWidth(labelOpts, fontSize) {\r\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\r\n      fontSize :\r\n      labelOpts.boxWidth;\r\n  }\r\n\r\n  function fit() {\r\n    var me = this;\r\n    var opts = me.options;\r\n    var labelOpts = opts.labels;\r\n    var display = opts.display;\r\n\r\n    var ctx = me.ctx;\r\n\r\n    var labelFont = helpers.options._parseFont(labelOpts);\r\n    var fontSize = labelFont.size;\r\n\r\n    // Reset hit boxes\r\n    var hitboxes = me.legendHitBoxes = [];\r\n\r\n    var minSize = me.minSize;\r\n    var isHorizontal = me.isHorizontal();\r\n\r\n    if (isHorizontal) {\r\n      minSize.width = me.maxWidth; // fill all the width\r\n      minSize.height = display ? 10 : 0;\r\n    } else {\r\n      minSize.width = display ? 10 : 0;\r\n      minSize.height = me.maxHeight; // fill all the height\r\n    }\r\n\r\n    var getMaxLineWidth = function (textLines) {\r\n      return textLines.map(function (textLine) {\r\n        return ctx.measureText(textLine).width;\r\n      }).reduce(function (acc, v) {\r\n        return v > acc ? v : acc;\r\n      }, 0);\r\n    };\r\n\r\n    // Increase sizes here\r\n    if (display) {\r\n      ctx.font = labelFont.string;\r\n\r\n      if (isHorizontal) {\r\n\r\n        // Labels\r\n\r\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n        var lineWidths = me.lineWidths = [0];\r\n        var lineHeights = me.lineHeights = [];\r\n        var currentLineHeight = 0;\r\n        var lineIndex = 0;\r\n\r\n        ctx.textAlign = 'left';\r\n        ctx.textBaseline = 'top';\r\n\r\n        helpers.each(me.legendItems, function (legendItem, i) {\r\n          var width, height;\r\n\r\n          if (helpers.isArray(legendItem.text)) {\r\n            width = getMaxLineWidth(legendItem.text);\r\n            height = fontSize * legendItem.text.length + labelOpts.padding;\r\n          } else {\r\n            width = ctx.measureText(legendItem.text).width;\r\n            height = fontSize + labelOpts.padding;\r\n          }\r\n          width += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\r\n\r\n          if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\r\n            lineHeights.push(currentLineHeight);\r\n            currentLineHeight = 0;\r\n            lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n            lineIndex++;\r\n          }\r\n\r\n          legendItem.lineOrColumnIndex = lineIndex;\r\n\r\n          if (height > currentLineHeight) {\r\n            currentLineHeight = height;\r\n          }\r\n\r\n          // Store the hitbox width and height here. Final position will be updated in `draw`\r\n          hitboxes[i] = {\r\n            left: 0,\r\n            top: 0,\r\n            width: width,\r\n            height: height,\r\n          };\r\n\r\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n        });\r\n\r\n        lineHeights.push(currentLineHeight);\r\n        minSize.height += lineHeights.reduce(function (acc, v) {\r\n          return acc + v;\r\n        }, 0);\r\n\r\n      } else {\r\n        var vPadding = labelOpts.padding;\r\n        var columnWidths = me.columnWidths = [];\r\n        var columnHeights = me.columnHeights = [];\r\n        var totalWidth = labelOpts.padding;\r\n        var currentColWidth = 0;\r\n        var currentColHeight = 0;\r\n        var columnIndex = 0;\r\n\r\n        helpers.each(me.legendItems, function (legendItem, i) {\r\n          var itemWidth;\r\n          var height;\r\n\r\n          if (helpers.isArray(legendItem.text)) {\r\n            itemWidth = getMaxLineWidth(legendItem.text);\r\n            height = fontSize * legendItem.text.length;\r\n          } else {\r\n            itemWidth = ctx.measureText(legendItem.text).width;\r\n            height = fontSize;\r\n          }\r\n          itemWidth += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\r\n\r\n          // If too tall, go to new column\r\n          if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\r\n            totalWidth += currentColWidth + labelOpts.padding;\r\n            columnWidths.push(currentColWidth); // previous column width\r\n            columnHeights.push(currentColHeight);\r\n            currentColWidth = 0;\r\n            currentColHeight = 0;\r\n            columnIndex++;\r\n          }\r\n\r\n          legendItem.lineOrColumnIndex = columnIndex;\r\n\r\n          // Get max width\r\n          currentColWidth = Math.max(currentColWidth, itemWidth);\r\n          currentColHeight += height + vPadding;\r\n\r\n          // Store the hitbox width and height here. Final position will be updated in `draw`\r\n          hitboxes[i] = {\r\n            left: 0,\r\n            top: 0,\r\n            width: itemWidth,\r\n            height: height\r\n          };\r\n        });\r\n\r\n        totalWidth += currentColWidth;\r\n        columnWidths.push(currentColWidth);\r\n        columnHeights.push(currentColHeight);\r\n        minSize.width += totalWidth;\r\n      }\r\n    }\r\n\r\n    me.width = minSize.width;\r\n    me.height = minSize.height;\r\n  }\r\n\r\n  function draw() {\r\n    var me = this;\r\n    var opts = me.options;\r\n    var labelOpts = opts.labels;\r\n    var globalDefaults = defaults.global;\r\n    var defaultColor = globalDefaults.defaultColor;\r\n    var lineDefault = globalDefaults.elements.line;\r\n    var legendHeight = me.height;\r\n    var columnHeights = me.columnHeights;\r\n    var columnWidths = me.columnWidths;\r\n    var legendWidth = me.width;\r\n    var lineWidths = me.lineWidths;\r\n    var lineHeights = me.lineHeights;\r\n\r\n    if (opts.display) {\r\n      var ctx = me.ctx;\r\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\r\n      var labelFont = helpers.options._parseFont(labelOpts);\r\n      var fontSize = labelFont.size;\r\n      var cursor;\r\n\r\n      // Canvas setup\r\n      ctx.textAlign = 'left';\r\n      ctx.textBaseline = 'middle';\r\n      ctx.lineWidth = 0.5;\r\n      ctx.strokeStyle = fontColor; // for strikethrough effect\r\n      ctx.fillStyle = fontColor; // render in correct colour\r\n      ctx.font = labelFont.string;\r\n\r\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n      var hitboxes = me.legendHitBoxes;\r\n\r\n      // current position\r\n      var drawLegendBox = function (x, y, legendItem) {\r\n        if (isNaN(boxWidth) || boxWidth <= 0) {\r\n          return;\r\n        }\r\n\r\n        // Set the ctx for the box\r\n        ctx.save();\r\n\r\n        var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n\r\n        if (ctx.setLineDash) {\r\n          // IE 9 and 10 do not support line dash\r\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n        }\r\n\r\n        if (opts.labels && opts.labels.usePointStyle) {\r\n          // Recalculate x and y for drawPoint() because its expecting\r\n          // x and y to be center of figure (instead of top left)\r\n          var radius = boxWidth * Math.SQRT2 / 2;\r\n          var centerX = x + boxWidth / 2;\r\n          var centerY = y + fontSize / 2;\r\n\r\n          // Draw pointStyle as legend symbol\r\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n        } else {\r\n          // Draw box as legend symbol\r\n          if (lineWidth !== 0) {\r\n            ctx.strokeRect(x, y, boxWidth, fontSize);\r\n          }\r\n          ctx.fillRect(x, y, boxWidth, fontSize);\r\n        }\r\n\r\n        ctx.restore();\r\n      };\r\n\r\n      var drawStrikeThrough = function (x, y, w) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 2;\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x + w, y);\r\n        ctx.stroke();\r\n      };\r\n\r\n      var drawCrossOver = function (x, y, w, h) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 2;\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x + w, y + h);\r\n        ctx.moveTo(x, y + h);\r\n        ctx.lineTo(x + w, y);\r\n        ctx.stroke();\r\n      };\r\n\r\n      var fillText = function (x, y, legendItem, textWidth) {\r\n        var halfFontSize = fontSize / 2;\r\n        var xLeft = boxWidth + halfFontSize + x;\r\n        var yMiddle = y + halfFontSize;\r\n\r\n        if (helpers.isArray(legendItem.text)) {\r\n          helpers.each(legendItem.text, function (textLine, index) {\r\n            var lineOffset = index * fontSize;\r\n            ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\r\n          });\r\n        } else {\r\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n        }\r\n\r\n        if (legendItem.hidden) {\r\n          if (helpers.isArray(legendItem.text)) {\r\n            drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\r\n          } else {\r\n            drawStrikeThrough(xLeft, yMiddle, textWidth);\r\n          }\r\n        }\r\n      };\r\n\r\n      var alignmentOffset = function (dimension, blockSize) {\r\n        switch (opts.align) {\r\n          case 'start':\r\n            return labelOpts.padding;\r\n          case 'end':\r\n            return dimension - blockSize;\r\n          default: // center\r\n            return (dimension - blockSize + labelOpts.padding) / 2;\r\n        }\r\n      };\r\n\r\n      // Horizontal\r\n      var isHorizontal = me.isHorizontal();\r\n      if (isHorizontal) {\r\n        cursor = {\r\n          x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\r\n          y: me.top + labelOpts.padding,\r\n          line: 0\r\n        };\r\n      } else {\r\n        cursor = {\r\n          x: me.left + labelOpts.padding,\r\n          y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\r\n          line: 0\r\n        };\r\n      }\r\n\r\n      helpers.each(me.legendItems, function (legendItem, i) {\r\n        var textWidth, height, boxTopOffset;\r\n\r\n        if (legendItem.lineOrColumnIndex > cursor.line) {\r\n          if (isHorizontal) {\r\n            cursor.y += lineHeights[cursor.line];\r\n            cursor.line = legendItem.lineOrColumnIndex;\r\n            cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\r\n          } else {\r\n            cursor.x += columnWidths[cursor.line] + labelOpts.padding;\r\n            cursor.line = legendItem.lineOrColumnIndex;\r\n            cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\r\n          }\r\n        }\r\n\r\n        if (helpers.isArray(legendItem.text)) {\r\n          textWidth = legendItem.text.map(function (textLine) {\r\n            return ctx.measureText(textLine).width;\r\n          }).reduce(function (acc, v) {\r\n            return v > acc ? v : acc;\r\n          }, 0);\r\n          boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\r\n          height = fontSize * legendItem.text.length;\r\n        } else {\r\n          textWidth = ctx.measureText(legendItem.text).width;\r\n          boxTopOffset = 0;\r\n          height = fontSize;\r\n        }\r\n\r\n        var width = boxWidth + (fontSize / 2) + textWidth;\r\n        var x = cursor.x;\r\n        var y = cursor.y;\r\n\r\n        var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\r\n\r\n        drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\r\n\r\n        hitboxes[i].left = x;\r\n        hitboxes[i].top = y;\r\n\r\n        // Fill the actual label\r\n        fillText(x, y + topOffset, legendItem, textWidth);\r\n\r\n        if (isHorizontal) {\r\n          cursor.x += width + labelOpts.padding;\r\n        } else {\r\n          cursor.y += height + labelOpts.padding;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","// tslint:disable:variable-name\r\n// tslint:disable:no-var-keyword\r\n// tslint:disable:prefer-const\r\n// tslint:disable:only-arrow-functions\r\n// tslint:disable:one-variable-per-declaration\r\n// tslint:disable:object-literal-shorthand\r\n// tslint:disable:space-before-function-paren\r\n\r\ndeclare class Chart {\r\n  static readonly Chart: typeof Chart;\r\n  static readonly Tooltip: any;\r\n  static readonly helpers: any;\r\n  static readonly defaults: any;\r\n  static readonly plugins: any;\r\n}\r\n\r\nexport function monkeyPatchChartJsTooltip() {\r\n  if (typeof Chart === 'undefined') {\r\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\r\n    return;\r\n  }\r\n  Chart.Tooltip.prototype.drawBody = drawBody;\r\n  const helpers = Chart.helpers;\r\n\r\n  function getAlignedX(vm, align) {\r\n    return align === 'center'\r\n      ? vm.x + vm.width / 2\r\n      : align === 'right'\r\n        ? vm.x + vm.width - vm.xPadding\r\n        : vm.x + vm.xPadding;\r\n  }\r\n\r\n  function drawBody(pt, vm, ctx) {\r\n    var bodyFontSize = vm.bodyFontSize;\r\n    var bodySpacing = vm.bodySpacing;\r\n    var bodyAlign = vm._bodyAlign;\r\n    var body = vm.body;\r\n    var drawColorBoxes = vm.displayColors;\r\n    var labelColors = vm.labelColors;\r\n    var xLinePadding = 0;\r\n    var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\r\n    var textColor;\r\n\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'top';\r\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n    pt.x = getAlignedX(vm, bodyAlign);\r\n\r\n    // Before Body\r\n    var fillLineOfText = function (line) {\r\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n      pt.y += bodyFontSize + bodySpacing;\r\n    };\r\n\r\n    // Before body lines\r\n    ctx.fillStyle = vm.bodyFontColor;\r\n    helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n    xLinePadding = drawColorBoxes && bodyAlign !== 'right'\r\n      ? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\r\n      : 0;\r\n\r\n    // Draw body lines now\r\n    helpers.each(body, function (bodyItem, i) {\r\n      textColor = vm.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n      // Draw Legend-like boxes if needed\r\n      if (drawColorBoxes) {\r\n        // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n        ctx.fillStyle = vm.legendColorBackground;\r\n        ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n        // Border\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = labelColors[i].borderColor;\r\n        ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n        // Inner square\r\n        ctx.fillStyle = labelColors[i].backgroundColor;\r\n        ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n        ctx.fillStyle = textColor;\r\n      }\r\n\r\n      helpers.each(bodyItem.lines, fillLineOfText);\r\n\r\n      helpers.each(bodyItem.after, fillLineOfText);\r\n    });\r\n\r\n    // Reset back to 0 for after body\r\n    xLinePadding = 0;\r\n\r\n    // After body lines\r\n    helpers.each(vm.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing; // Remove last body spacing\r\n  }\r\n}\r\n"]}