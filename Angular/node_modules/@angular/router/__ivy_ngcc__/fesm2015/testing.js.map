{"version":3,"file":"testing.js","sources":["../../../../../../packages/router/testing/src/router_testing_module.ts","../../../../../../packages/router/testing/testing.ts"],"names":["flatten","ROUTER_PROVIDERS"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {MockLocationStrategy, SpyLocation} from '@angular/common/testing';\nimport {Compiler, Injectable, Injector, ModuleWithProviders, NgModule, NgModuleFactory, NgModuleFactoryLoader, Optional} from '@angular/core';\nimport {ChildrenOutletContexts, ExtraOptions, NoPreloading, PreloadingStrategy, provideRoutes, Route, Router, ROUTER_CONFIGURATION, RouterModule, ROUTES, Routes, UrlHandlingStrategy, UrlSerializer, ɵflatten as flatten, ɵROUTER_PROVIDERS as ROUTER_PROVIDERS} from '@angular/router';\n\n\n\n/**\n * @description\n *\n * Allows to simulate the loading of ng modules in tests.\n *\n * ```\n * const loader = TestBed.inject(NgModuleFactoryLoader);\n *\n * @Component({template: 'lazy-loaded'})\n * class LazyLoadedComponent {}\n * @NgModule({\n *   declarations: [LazyLoadedComponent],\n *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n * })\n *\n * class LoadedModule {}\n *\n * // sets up stubbedModules\n * loader.stubbedModules = {lazyModule: LoadedModule};\n *\n * router.resetConfig([\n *   {path: 'lazy', loadChildren: 'lazyModule'},\n * ]);\n *\n * router.navigateByUrl('/lazy/loaded');\n * ```\n *\n * @publicApi\n */\n@Injectable()\nexport class SpyNgModuleFactoryLoader implements NgModuleFactoryLoader {\n  /**\n   * @docsNotRequired\n   */\n  private _stubbedModules: {[path: string]: Promise<NgModuleFactory<any>>} = {};\n\n  /**\n   * @docsNotRequired\n   */\n  set stubbedModules(modules: {[path: string]: any}) {\n    const res: {[path: string]: any} = {};\n    for (const t of Object.keys(modules)) {\n      res[t] = this.compiler.compileModuleAsync(modules[t]);\n    }\n    this._stubbedModules = res;\n  }\n\n  /**\n   * @docsNotRequired\n   */\n  get stubbedModules(): {[path: string]: any} {\n    return this._stubbedModules;\n  }\n\n  constructor(private compiler: Compiler) {}\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    if (this._stubbedModules[path]) {\n      return this._stubbedModules[path];\n    } else {\n      return <any>Promise.reject(new Error(`Cannot find module ${path}`));\n    }\n  }\n}\n\nfunction isUrlHandlingStrategy(opts: ExtraOptions|\n                               UrlHandlingStrategy): opts is UrlHandlingStrategy {\n  // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n  // runtime.\n  return 'shouldProcessUrl' in opts;\n}\n\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nexport function setupTestingRouter(\n    urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts, location: Location,\n    loader: NgModuleFactoryLoader, compiler: Compiler, injector: Injector, routes: Route[][],\n    opts?: ExtraOptions, urlHandlingStrategy?: UrlHandlingStrategy): Router;\n\n/**\n * Router setup factory function used for testing.\n *\n * @deprecated As of v5.2. The 2nd-to-last argument should be `ExtraOptions`, not\n * `UrlHandlingStrategy`\n * @publicApi\n */\nexport function setupTestingRouter(\n    urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts, location: Location,\n    loader: NgModuleFactoryLoader, compiler: Compiler, injector: Injector, routes: Route[][],\n    urlHandlingStrategy?: UrlHandlingStrategy): Router;\n\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nexport function setupTestingRouter(\n    urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts, location: Location,\n    loader: NgModuleFactoryLoader, compiler: Compiler, injector: Injector, routes: Route[][],\n    opts?: ExtraOptions|UrlHandlingStrategy, urlHandlingStrategy?: UrlHandlingStrategy) {\n  const router = new Router(\n      null!, urlSerializer, contexts, location, injector, loader, compiler, flatten(routes));\n  if (opts) {\n    // Handle deprecated argument ordering.\n    if (isUrlHandlingStrategy(opts)) {\n      router.urlHandlingStrategy = opts;\n    } else {\n      // Handle ExtraOptions\n\n      if (opts.malformedUriErrorHandler) {\n        router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n      }\n\n      if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n      }\n    }\n  }\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n  return router;\n}\n\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location`, `LocationStrategy`, and {@link\n * NgModuleFactoryLoader}.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\n@NgModule({\n  exports: [RouterModule],\n  providers: [\n    ROUTER_PROVIDERS, {provide: Location, useClass: SpyLocation},\n    {provide: LocationStrategy, useClass: MockLocationStrategy},\n    {provide: NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader}, {\n      provide: Router,\n      useFactory: setupTestingRouter,\n      deps: [\n        UrlSerializer, ChildrenOutletContexts, Location, NgModuleFactoryLoader, Compiler, Injector,\n        ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()]\n      ]\n    },\n    {provide: PreloadingStrategy, useExisting: NoPreloading}, provideRoutes([])\n  ]\n})\nexport class RouterTestingModule {\n  static withRoutes(routes: Routes, config?: ExtraOptions):\n      ModuleWithProviders<RouterTestingModule> {\n    return {\n      ngModule: RouterTestingModule,\n      providers: [\n        provideRoutes(routes),\n        {provide: ROUTER_CONFIGURATION, useValue: config ? config : {}},\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}