{"version":3,"file":"testing.js","sources":["../../../../../../packages/common/testing/src/location_mock.ts","../../../../../../packages/common/testing/src/mock_location_strategy.ts","../../../../../../packages/common/testing/src/mock_platform_location.ts","../../../../../../packages/common/testing/testing.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy, PlatformLocation} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {SubscriptionLike} from 'rxjs';\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class SpyLocation implements Location {\n  urlChanges: string[] = [];\n  private _history: LocationState[] = [new LocationState('', '', null)];\n  private _historyIndex: number = 0;\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string = '';\n  /** @internal */\n  _platformStrategy: LocationStrategy = null!;\n  /** @internal */\n  _platformLocation: PlatformLocation = null!;\n  /** @internal */\n  _urlChangeListeners: ((url: string, state: unknown) => void)[] = [];\n\n  setInitialPath(url: string) {\n    this._history[this._historyIndex].path = url;\n  }\n\n  setBaseHref(url: string) {\n    this._baseHref = url;\n  }\n\n  path(): string {\n    return this._history[this._historyIndex].path;\n  }\n\n  getState(): unknown {\n    return this._history[this._historyIndex].state;\n  }\n\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath =\n        this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n\n    return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n  }\n\n  simulateUrlPop(pathname: string) {\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'popstate'});\n  }\n\n  simulateHashChange(pathname: string) {\n    // Because we don't prevent the native event, the browser will independently update the path\n    this.setInitialPath(pathname);\n    this.urlChanges.push('hash: ' + pathname);\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'hashchange'});\n  }\n\n  prepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._baseHref + url;\n  }\n\n  go(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query, state));\n    this._historyIndex = this._history.length - 1;\n\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push(url);\n    this._subject.emit({'url': url, 'pop': false});\n  }\n\n  replaceState(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    const history = this._history[this._historyIndex];\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n    history.state = state;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push('replace: ' + url);\n  }\n\n  forward() {\n    if (this._historyIndex < (this._history.length - 1)) {\n      this._historyIndex++;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n  onUrlChange(fn: (url: string, state: unknown) => void) {\n    this._urlChangeListeners.push(fn);\n    this.subscribe(v => {\n      this._notifyUrlChangeListeners(v.url, v.state);\n    });\n  }\n\n  /** @internal */\n  _notifyUrlChangeListeners(url: string = '', state: unknown) {\n    this._urlChangeListeners.forEach(fn => fn(url, state));\n  }\n\n  subscribe(\n      onNext: (value: any) => void, onThrow?: ((error: any) => void)|null,\n      onReturn?: (() => void)|null): SubscriptionLike {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  normalize(url: string): string {\n    return null!;\n  }\n}\n\nclass LocationState {\n  constructor(public path: string, public query: string, public state: any) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  private stateChanges: any[] = [];\n  constructor() {\n    super();\n  }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string {\n    return this.internalPath;\n  }\n\n  prepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    // Add state change to changes array\n    this.stateChanges.push(ctx);\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    // Reset the last index of stateChanges to the ctx (state) object\n    this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void {\n    this._subject.subscribe({next: fn});\n  }\n\n  getBaseHref(): string {\n    return this.internalBaseHref;\n  }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      this.stateChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void {\n    throw 'not implemented';\n  }\n\n  getState(): unknown {\n    return this.stateChanges[(this.stateChanges.length || 1) - 1];\n  }\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeEvent, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\nfunction parseUrl(urlStr: string, baseHref: string) {\n  const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  let serverBase: string|undefined;\n\n  // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n  // an arbitrary base URL which can be removed afterward.\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n  let parsedUrl: {\n    protocol: string,\n    hostname: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string\n  };\n  try {\n    parsedUrl = new URL(urlStr, serverBase);\n  } catch (e) {\n    const result = urlParse.exec(serverBase || '' + urlStr);\n    if (!result) {\n      throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n    }\n    const hostSplit = result[4].split(':');\n    parsedUrl = {\n      protocol: result[1],\n      hostname: hostSplit[0],\n      port: hostSplit[1] || '',\n      pathname: result[5],\n      search: result[6],\n      hash: result[8],\n    };\n  }\n  if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n    parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n  }\n  return {\n    hostname: !serverBase && parsedUrl.hostname || '',\n    protocol: !serverBase && parsedUrl.protocol || '',\n    port: !serverBase && parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '/',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || '',\n  };\n}\n\n/**\n * Mock platform location config\n *\n * @publicApi\n */\nexport interface MockPlatformLocationConfig {\n  startUrl?: string;\n  appBaseHref?: string;\n}\n\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nexport const MOCK_PLATFORM_LOCATION_CONFIG =\n    new InjectionToken<MockPlatformLocationConfig>('MOCK_PLATFORM_LOCATION_CONFIG');\n\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockPlatformLocation implements PlatformLocation {\n  private baseHref: string = '';\n  private hashUpdate = new Subject<LocationChangeEvent>();\n  private urlChanges: {\n    hostname: string,\n    protocol: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string,\n    state: unknown\n  }[] = [{hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null}];\n\n  constructor(@Inject(MOCK_PLATFORM_LOCATION_CONFIG) @Optional() config?:\n                  MockPlatformLocationConfig) {\n    if (config) {\n      this.baseHref = config.appBaseHref || '';\n\n      const parsedChanges =\n          this.parseChanges(null, config.startUrl || 'http://<empty>/', this.baseHref);\n      this.urlChanges[0] = {...parsedChanges};\n    }\n  }\n\n  get hostname() {\n    return this.urlChanges[0].hostname;\n  }\n  get protocol() {\n    return this.urlChanges[0].protocol;\n  }\n  get port() {\n    return this.urlChanges[0].port;\n  }\n  get pathname() {\n    return this.urlChanges[0].pathname;\n  }\n  get search() {\n    return this.urlChanges[0].search;\n  }\n  get hash() {\n    return this.urlChanges[0].hash;\n  }\n  get state() {\n    return this.urlChanges[0].state;\n  }\n\n\n  getBaseHrefFromDOM(): string {\n    return this.baseHref;\n  }\n\n  onPopState(fn: LocationChangeListener): void {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    this.hashUpdate.subscribe(fn);\n  }\n\n  get href(): string {\n    let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n    url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n    return url;\n  }\n\n  get url(): string {\n    return `${this.pathname}${this.search}${this.hash}`;\n  }\n\n  private parseChanges(state: unknown, url: string, baseHref: string = '') {\n    // When the `history.state` value is stored, it is always copied.\n    state = JSON.parse(JSON.stringify(state));\n    return {...parseUrl(url, baseHref), state};\n  }\n\n  replaceState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n\n    this.urlChanges[0] = {...this.urlChanges[0], pathname, search, hash, state: parsedState};\n  }\n\n  pushState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n    this.urlChanges.unshift({...this.urlChanges[0], pathname, search, hash, state: parsedState});\n  }\n\n  forward(): void {\n    throw new Error('Not implemented');\n  }\n\n  back(): void {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    this.urlChanges.shift();\n    const newHash = this.hash;\n\n    if (oldHash !== newHash) {\n      scheduleMicroTask(\n          () => this.hashUpdate.next(\n              {type: 'hashchange', state: null, oldUrl, newUrl: this.url} as LocationChangeEvent));\n    }\n  }\n\n  getState(): unknown {\n    return this.state;\n  }\n}\n\nexport function scheduleMicroTask(cb: () => any) {\n  Promise.resolve(null).then(cb);\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}