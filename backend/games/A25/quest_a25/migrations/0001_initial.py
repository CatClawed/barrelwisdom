# Generated by Django 4.2.5 on 2023-10-16 03:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('items_a25', '0009_remove_item_timestamp'),
        ('misc_a25', '0010_delete_update_remove_trait_timestamp'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dungeon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misc_a25.name')),
            ],
        ),
        migrations.CreateModel(
            name='FieldEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misc_a25.desc')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misc_a25.name')),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(blank=True, null=True)),
                ('order', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items_a25.item')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('combat_level', models.IntegerField()),
                ('kind', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misc_a25.filterable')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misc_a25.name')),
                ('rewards', models.ManyToManyField(to='quest_a25.reward')),
            ],
            options={
                'ordering': ['kind'],
            },
        ),
        migrations.CreateModel(
            name='Tower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.IntegerField(unique=True)),
                ('combat_level', models.IntegerField()),
                ('effects', models.ManyToManyField(to='quest_a25.fieldeffect')),
                ('rewards', models.ManyToManyField(to='quest_a25.reward')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreBattleDifficulties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(max_length=10, unique=True)),
                ('difficulty', models.IntegerField(default=0)),
                ('cole', models.IntegerField(default=0)),
                ('rewards', models.ManyToManyField(to='quest_a25.reward')),
            ],
            options={
                'ordering': ['difficulty'],
            },
        ),
        migrations.CreateModel(
            name='ScoreBattle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.CharField(max_length=10)),
                ('section', models.CharField(max_length=10)),
                ('difficulties', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_a25.scorebattledifficulties')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misc_a25.name')),
            ],
            options={
                'ordering': ['chapter', 'section'],
            },
        ),
        migrations.CreateModel(
            name='DungeonFloor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('combat_level', models.IntegerField()),
                ('dungeon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_a25.dungeon')),
                ('effects', models.ManyToManyField(to='quest_a25.fieldeffect')),
                ('rewards', models.ManyToManyField(to='quest_a25.reward')),
            ],
        ),
        migrations.AddField(
            model_name='dungeon',
            name='rewards',
            field=models.ManyToManyField(to='quest_a25.reward'),
        ),
        migrations.AddConstraint(
            model_name='scorebattle',
            constraint=models.UniqueConstraint(fields=('chapter', 'section'), name='score_section'),
        ),
    ]
